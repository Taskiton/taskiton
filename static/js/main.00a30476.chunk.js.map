{"version":3,"sources":["config/config.js","images/task-icons.svg","context/AuthContext.js","landing/components/NavBar.js","landing/components/HamNav.js","landing/LandingPageStyle.js","landing/components/PricingCard.js","landing/components/Pricing.js","landing/LandingPage.js","signup/SignupStyle.js","signup/components/formItem.js","signup/Signup.js","dashboard/kanban/HandleKanbanData.js","dashboard/kanban/Task.js","dashboard/kanban/Column.js","dashboard/Modal/Modal.js","dashboard/TaskForm/TaskForm.js","dashboard/TaskForm/EditTaskForm.js","dashboard/kanban/Kanban.js","dashboard/TeamChat/userData.js","dashboard/TeamChat/InputControl.js","dashboard/TeamChat/Chat.js","dashboard/Sample.js","dashboard/TeamList/TeamList.js","dashboard/Dashboard.js","login/LoginStyle.js","login/components/formItem.js","login/Login.js","Analytics/TaskPieChart.js","Analytics/UserLineChart.js","Analytics/Analytics.js","Team/Team.js","contact/Contact.js","App.js","serviceWorker.js","index.js","Main.js","images/signupImage.svg"],"names":["module","exports","PUBLISHKEY","SUBSCRIBEKEY","AuthContext","createContext","AuthContextProvider","props","useState","localStorage","getItem","isAuthenticated","setIsAuthenticated","Provider","value","toggleAuth","parm","children","useStyles","makeStyles","theme","root","marginLeft","spacing","paddingRight","breakpoints","down","margin","padding","buttonStyle","backgroundColor","color","fontSize","marginTop","width","borderColor","boxShadow","linkStyle","fontWeight","textDecoration","fontFamily","position","left","between","NavBar","context","useContext","classes","isHamNav","display","textAlign","paddingTop","float","history","useHistory","Typography","className","Box","to","style","component","Button","variant","onClick","push","setItem","defaultProps","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","height","appBarShift","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","HamNav","useTheme","React","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","landingPageStyle","nav","palette","text","secondary","promo1","promo2","landingPhoto","landingMotto","pricing","minWidth","top","pos","actionBtn","PricingCard","Card","CardContent","desc","price","CardActions","Pricing","flexWrap","LandingPage","Grid","container","item","xs","sm","src","landingLogo","alt","signupPageStyle","formStyle","signupImage","signUpButton","loginButton","FormItem","TextField","type","name","label","onChange","Signup","mail","lastname","password","copassword","user","setUser","handleChange","event","target","RegExp","test","console","log","prevState","signupLogo","onSubmit","preventDefault","data","fetch","proxyurl","method","headers","body","JSON","stringify","then","response","status","Error","catch","err","handleSubmit","paddingLeft","noValidate","autoComplete","id","initialData","tasks","columns","taskIds","columnOrder","avatar","getContrastText","deepOrange","Task","draggableId","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","handleEditTask","columnId","Avatar","assignedTo","taskName","dueDate","toString","Column","column","handleAddNewTask","cursor","droppableId","droppableProps","map","key","placeholder","modal","background","border","shadows","KanbanModal","Modal","aria-labelledby","aria-describedby","modalStateOpen","onClose","handleModalClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","textField","paddingBottom","TaskForm","date","Date","setDate","getDate","taskDetails","toLocaleDateString","setTask","users","setUsers","useEffect","alert","json","handleAddNewTaskSubmit","required","TextareaAutosize","rowsMin","InputLabel","Select","native","labelId","hidden","user_id","split","utils","DateFnsUtils","DateTimePicker","disablePast","closeModal","EditTaskForm","details","handleEditTaskSubmit","handleEditNewTaskDelete","Kanban","setData","fetchInitialData","result","moveTaskToNewColumn","_taskId","_columnId","taskId","setmodalStateOpen","currentColumnId","setCurrentColumnId","isItNewTask","setIsItNewTask","addNewTaskToDb","newTask","assignedUser","editTaskDetails","setEditTaskDetails","editColumnId","setEditColumnId","editTaskFromDb","_task","deleteTaskFromDb","task_id","Promise","resolve","reject","Object","keys","task_name","user_name","task_details","due_date","onDragEnd","destination","source","newTaskIds","Array","from","splice","newColumn","sourceColumn","newSourceTaskIds","destinationColumn","newDestinationTaskIds","newSourceColumn","newDestinationColumn","onDragStart","colId","val","length","allTasks","numbOfTasks","newTaskId","currentColumnTaskIds","updatedColumn","indexToDelete","indexOf","userData","useInput","setValue","orange","purple","deepPurple","chatAvatar","overflow","borderRadius","messageContainer","chatInfoContainer","chatUsername","mainMessage","Log","List","maxHeight","ListItem","messages","Message","uuid","userName","breakMessage","replace","ListItemText","Chip","App","channel","setMessages","UserData","displayname","username","tempMessage","publishMessage","messageObject","PubNub","publishKey","subscribeKey","publish","message","code","success","pubnub","ApiConfig","addListener","statusEvent","category","msg","unixTimestamp","timetoken","localeDateTime","toLocaleString","newMessages","concat","presence","p","occupancy","state","timestamp","hereNow","channels","includeUUIDs","includeState","subscribe","withPresence","count","stringifiedTimeToken","i","entry","unsubscribeAll","inline","Input","fullWidth","onKeyDown","inputProps","autoFocus","size","TeamList","gridTeam","gridKanban","gridChat","gridAnnouncement","Dashboard","loginPageStyle","Login","email","on","pieOptions","pieHole","slices","legend","alignment","textStyle","tooltip","showColorCode","chartArea","fontName","TaskPieChart","chartType","options","graph_id","legend_toggle","curveType","UserLineChart","userLineChart","generalStat","taskPieChart","Analytics","Paper","Team","Contact","square","for","getWindowDimensions","window","innerWidth","innerHeight","check","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.00a30476.chunk.js","sourcesContent":["\r\nmodule.exports = {\r\n     PUBLISHKEY :'pub-c-10978436-24d2-4d1f-aadf-e88df92715b3',\r\n     SUBSCRIBEKEY :'sub-c-1ae870c6-5741-11ea-814d-0ecb550e9de2'\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/task-icons.4a256973.svg\";","import React, {useState, createContext } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthContextProvider(props) {\r\n\r\n    const[isAuthenticated, setIsAuthenticated] = useState(localStorage.getItem(\"isAuth\")=== 'true');\r\n\r\n    const toggleAuth = (parm) => {\r\n        setIsAuthenticated(parm);\r\n    }\r\n    return(\r\n    <AuthContext.Provider value={{isAuthenticated, toggleAuth}}>\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n    );\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { useContext } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing(2),\r\n    paddingRight: '10%',\r\n    //Contunie here, its not good for hambuger button\r\n    //   \"&:nth-child(1)\": {\r\n    //     marginLeft:'20%'\r\n    //  },\r\n    [theme.breakpoints.down('xs')]: {\r\n      margin: 'auto',\r\n      padding: '2vh',\r\n    }\r\n  },\r\n  buttonStyle: {\r\n    marginLeft: theme.spacing(2),\r\n    backgroundColor: '#F76C6C',\r\n    color: 'white',\r\n    fontSize: '0.5',\r\n    marginTop: -5,\r\n    //Media Query for mobile version\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(2),\r\n      marginLeft: 0\r\n    },\r\n    '&:hover': {\r\n      backgroundColor: '#dc5a5a',\r\n      borderColor: '#dc5a5a',\r\n      boxShadow: 'none',\r\n    }\r\n  },\r\n  linkStyle: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    fontSize: '1em',\r\n    textDecoration: 'none',\r\n    fontFamily: 'sans-serif',\r\n    position: 'relative',\r\n    left: '5vw',\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      marginLeft: theme.spacing(1),\r\n      position: 'relative',\r\n      left: '5vw'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n\r\n      position: 'relative',\r\n      left: '1vw'\r\n    },\r\n\r\n  }\r\n\r\n}));\r\nNavBar.defaultProps = {\r\n  isHamNav: false,\r\n}\r\nexport default function NavBar(props) {\r\n\r\n  const context = useContext(AuthContext);\r\n  const { isAuthenticated, toggleAuth} = context;\r\n\r\n  const classes = useStyles();\r\n\r\n  const preventDefault = event => event.preventDefault();\r\n\r\n  const linkStyle = (props.isHamNav) ?\r\n    {\r\n      display: 'block',\r\n      textAlign: 'center',\r\n      paddingTop: '20%',\r\n      margin: 'auto',\r\n      // boxShadow: '0px 2px #888888',\r\n    } : {\r\n      paddingRight: '5%',\r\n      float: 'left',\r\n    };\r\n\r\n  let history = useHistory();\r\n  let handleSignout = () => {\r\n    history.push(\"/\");\r\n    toggleAuth(false);\r\n    localStorage.setItem(\"isAuth\", false)\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Typography className={classes.root} >\r\n        <Box className={classes.linkStyle}>\r\n          <Link to=\"/\" style={linkStyle} className={classes.linkStyle}>\r\n            Home\r\n      </Link>\r\n\r\n          <Link to=\"/team\" style={linkStyle} className={classes.linkStyle}>\r\n            Team\r\n      </Link>\r\n          <Link to=\"/contact\" style={linkStyle} className={classes.linkStyle}>\r\n            Contact Us\r\n      </Link>\r\n      {isAuthenticated?\r\n        <div>\r\n          <Link to=\"/analytics\" style={linkStyle} className={classes.linkStyle}>\r\n                Analytics\r\n          </Link>\r\n          <Link to=\"/dashboard\" style={linkStyle} className={classes.linkStyle}>\r\n                Dashboard\r\n          </Link>\r\n        </div> : ''}\r\n      \r\n        </Box>\r\n        <Box component=\"span\" >\r\n        {!isAuthenticated?\r\n          <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\r\n            <Button variant=\"contained\" className={classes.buttonStyle} style={{ backgroundColor: '#000000' }}>Signup</Button>\r\n          </Link>:\"\"}\r\n          {isAuthenticated?\r\n            <Button variant=\"contained\" className={classes.buttonStyle} onClick={handleSignout}>\r\n              Signout\r\n            </Button>\r\n          :\"\"}\r\n        </Box>\r\n      </Typography>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport NavBar from './NavBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    height: '56px',\r\n    backgroundColor:'white'\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function HamNav() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n          color:'purple'\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n          </Typography>\r\n          <IconButton\r\n            color=\"black\"\r\n            fontWeight=\"bold\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      </main>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <NavBar isHamNav={true} />\r\n\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const landingPageStyle = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    nav: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'right',\r\n        color: theme.palette.text.secondary,\r\n        height: '8vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '6vh',\r\n        }\r\n    },\r\n    promo1: {\r\n        height: '96vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            // height: '60vh',\r\n        }\r\n    },\r\n    promo2: {\r\n        height: '100vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '50vh',\r\n        }\r\n    },\r\n    landingPhoto:{\r\n        width:'80%',\r\n        margin:'auto',\r\n        padding:theme.spacing(7),\r\n        paddingTop:'6vh',\r\n        [theme.breakpoints.between('xs','sm')]: {\r\n            paddingTop:'15vh',\r\n            padding:0,\r\n            width:'100%'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding:0\r\n        }\r\n\r\n    },\r\n    landingMotto:{\r\n        paddingTop:'25vh',\r\n        width:'50%',\r\n        margin:'auto',\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop:'10vh',\r\n            width:'80%',\r\n            textAlign:'center',\r\n            marginTop: '20%'\r\n        }\r\n    },\r\n    pricing: {\r\n        padding:10,\r\n    }\r\n}));\r\n","import React, {useContext} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AuthContext } from '../../context/AuthContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 270,\r\n        textAlign: \"center\",\r\n        padding:30,\r\n        margin:10,\r\n        top: '3vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            width:'100%',\r\n            top: '1vh',\r\n        }\r\n    },\r\n    title: {\r\n        fontSize: '2em',\r\n        fontWeight: 700,\r\n        [theme.breakpoints.down('xs')]: {\r\n        }\r\n    },\r\n    pos: {\r\n    },\r\n    actionBtn: {\r\n        margin: 'auto',\r\n        backgroundColor: '#F76C6C',\r\n        color: 'white',\r\n        width: '100%',\r\n        fontWeight: '900',\r\n        \"&:hover\": {\r\n            color: 'black',\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nfunction PricingCard(props) {\r\n    let classes = useStyles();\r\n    let history = useHistory();\r\n    const context = useContext(AuthContext);\r\n    const {isAuthenticated} = context;\r\n\r\n    let handleClick = () => {\r\n        if(isAuthenticated) {\r\n            history.push(\"/dashboard\");\r\n        } else {\r\n            history.push(\"/signup\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{height:'100%'}}>\r\n            <Card className={classes.root} variant=\"outlined\">\r\n                <CardContent>\r\n                    <p className={classes.title}>{props.title}</p>\r\n                    <p>{props.desc}</p>\r\n                    <h2>{props.price}</h2>\r\n                    <p>per user/month</p>\r\n                </CardContent>\r\n                <CardActions >\r\n                    <Button className={classes.actionBtn} onClick={handleClick}><b>Try it</b></Button>\r\n                </CardActions>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PricingCard;","import React from 'react';\r\nimport PricingCard from './PricingCard';\r\n\r\nconst Pricing = () => {\r\n\r\n    const planStyle = {\r\n        fontSize: '3em',\r\n        padding:5,\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: '100%', textAlign: 'center'}}>\r\n            <p style={planStyle}><b>Choose a plan that is right for you</b></p>\r\n            <div style={{ width: '100%', textAlign: 'center', display: 'flex', justifyContent:'center', flexWrap:'wrap', height:'100%'}}>\r\n                <PricingCard title=\"Starter\" desc=\"This is a Starter plan\" price=\"Free\" />\r\n                <PricingCard title=\"Standard\" desc=\"This is a Basic plan\" price=\"$9\" />\r\n                <PricingCard title=\"Pro\" desc=\"This is a Pro plan\" price=\"$29\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pricing;","import React from 'react';\r\nimport './LandingPage.css';\r\nimport {landingPageStyle} from'./LandingPageStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport landingLogo from '../images/task-icons.svg';\r\nimport Pricing from './components/Pricing';\r\n\r\nconst useStyles = landingPageStyle;\r\n\r\nexport default function LandingPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\r\n                        <p className={classes.landingMotto}>\r\n                            <h1 style={{fontSize:'2.2em'}}>Work Efficiently</h1>\r\n                            <p style={{width:'100%',fontSize:'1.25em'}}>Manage your household tasks easily and efficiently using Tasktion. Taskiton enable you to organize daily tasks and help you to stay productive.</p>\r\n                        </p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\r\n                        <img className={classes.landingPhoto} src={landingLogo} alt=\"mainpic\"></img>\r\n                        \r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div className={classes.promo1}>\r\n                        <Pricing/>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const signupPageStyle = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n    },\r\n    formStyle:{\r\n        display: 'block',\r\n        textAlign: 'right',\r\n        color: theme.palette.text.secondary,\r\n        width: '100%',\r\n    },\r\n    signupImage:{\r\n        width:'70%',\r\n        margin:'auto',\r\n        padding:'5vw',\r\n        paddingTop:'6vh',\r\n        [theme.breakpoints.between('xs','sm')]: {\r\n            paddingTop:'15vh',\r\n            padding:0,\r\n            width:'100%'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none',\r\n            padding:0\r\n        }\r\n    },\r\n    signUpButton:{\r\n        backgroundColor: '#F76C6C',\r\n        width:'45%',\r\n        height: '50px',\r\n        display: 'inline',\r\n        marginLeft:'auto',\r\n        marginRight:'1vw',\r\n        marginTop:'3vh',\r\n        '&:hover': {\r\n            backgroundColor: '#dc5a5a',\r\n            borderColor: '#dc5a5a',\r\n            boxShadow: 'none',\r\n          },\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F76C6C',\r\n            borderColor: '#F76C6C',\r\n          },\r\n    },\r\n    loginButton:{\r\n        backgroundColor: '#A8D0E6',\r\n        width:'45%',\r\n        height: '50px',\r\n        display: 'inline',\r\n        marginLeft:'auto',\r\n        marginRight:'1vw',\r\n        marginTop:'3vh',\r\n        '&:hover': {\r\n            backgroundColor: '#86b8d4',\r\n            borderColor: '#86b8d4',\r\n            boxShadow: 'none',\r\n          },\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#A8D0E6',\r\n            borderColor: '#A8D0E6',\r\n          },\r\n    },\r\n    linkStyle: {\r\n        fontWeight: 'bold',\r\n        color: 'black',\r\n        fontSize: '1.1em',\r\n        textDecoration: 'none',\r\n        fontFamily: 'sans-serif',\r\n        position: 'relative',\r\n        left: '5vw',\r\n        [theme.breakpoints.between('sm', 'md')]: {\r\n          marginLeft: theme.spacing(1),\r\n          position: 'relative',\r\n          left: '5vw'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n    \r\n          position: 'relative',\r\n          left: '1vw'\r\n        },\r\n    \r\n      }\r\n   \r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport {signupPageStyle} from '../SignupStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = signupPageStyle\r\n\r\nexport default function FormItem (props){\r\n    const classes = useStyles();\r\n    const formItem = {\r\n        width: '100%',\r\n        marginTop:'2.5vh',\r\n        color:'secondary',\r\n        marginLeft: 'auto',\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F76C6C',\r\n            borderColor: '#F76C6C',\r\n          },\r\n    }\r\n    return(\r\n        <Grid item xs={12}>\r\n                <TextField color=\"secondary\" type={props.type}style={formItem} name={props.name} label={props.label} value={props.value} onChange={props.onChange} variant=\"outlined\" />\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { signupPageStyle } from './SignupStyle';\r\nimport { palette } from '@material-ui/system';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormItem from './components/formItem'\r\nimport signupLogo from '../images/signupImage.svg'\r\n\r\n\r\n\r\nconst useStyles = signupPageStyle\r\n\r\nexport default function Signup() {\r\n\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({\r\n        mail: \"\",\r\n        name: \"\",\r\n        lastname: \"\",\r\n        password: \"\",\r\n        copassword: \"\"\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const frmStyle = {\r\n        height: '75vh',\r\n        paddingLeft: '7vw',\r\n        paddingRight: '7vw',\r\n        paddingTop: '5vh',\r\n        // boxShadow: 'rgb(216, 215, 215) 1px 2px 10px 2px',\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        \r\n        event.preventDefault()\r\n        var data = {\r\n            mail: user.mail,\r\n            name: user.name,\r\n            lastname: user.lastname,\r\n            password: user.password,\r\n            copassword: user.copassword,\r\n        }\r\n        // console.log(data);\r\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n        const url = 'http://api.taskiton.wmdd.ca/user_create';\r\n        fetch(proxyurl + url, {\r\n            method: 'POST',\r\n            headers: { 'Accept': 'application/json, text/plain, */*'\r\n            ,'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n            if (response.status >= 400) {\r\n                throw new Error(\"Bad response from server\");\r\n            }\r\n            // console.log(response)\r\n            // return response.json();\r\n        }).then(function (data) {\r\n            // console.log(data);\r\n            history.push(\"/dashboard\");\r\n            if (data == \"success\") {\r\n                console.log(\"Success\");\r\n            }\r\n        }).catch(function (err) {\r\n            console.log(err)\r\n        });\r\n    }\r\n    function handleChange(event) {\r\n        const { name, value } = event.target\r\n\r\n        //In progress\r\n        if(name === 'mail'){\r\n            const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n             if(!validEmailRegex.test(value)){\r\n                // console.log(FormItem().formIte)\r\n                console.log('This is not email Adress');\r\n             }\r\n        }\r\n        setUser(prevState => {\r\n            // console.log(prevState)\r\n            return {\r\n                ...prevState,\r\n                [name]: value\r\n            }    \r\n        });\r\n    }\r\n    const handleLogin = () => {\r\n        history.push(\"/login\");\r\n    }\r\n\r\n    return (\r\n        <div className={classes.formStyle}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <img className={classes.signupImage} src={signupLogo}></img>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <form onSubmit={(event) => handleSubmit(event)} style={frmStyle} noValidate autoComplete=\"off\">\r\n                        <h1 style={{ textAlign: 'center', fontSize: '2.1em', marginTop: '0', color: 'black' }}>Create Account</h1>\r\n                        <FormItem style={{ marginTop: '1vh' }} label=\"Email\" name='mail' value={user.mail} onChange={(event) => handleChange(event)} />\r\n                        <FormItem label=\"First Name\" name='name' value={user.name} onChange={(event) => handleChange(event)} />\r\n                        <FormItem label=\"Last Name\" name='lastname' value={user.lastname} onChange={(event) => handleChange(event)} />\r\n                        <FormItem type='password' label=\"Password\" name='password' value={user.password} onChange={(event) => handleChange(event)} />\r\n                        <FormItem type='password' label=\"Confirm Password\" name='copassword' value={user.copassword} onChange={(event) => handleChange(event)} />\r\n                        <Button id=\"submitButton\" type=\"submit\" className={classes.signUpButton} variant=\"contained\" color=\"primary\"> SIGN UP </Button>\r\n                        <Button id=\"loginButton\" className={classes.loginButton} variant=\"contained\" color=\"primary\" onClick={handleLogin}> LOGIN </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","\r\nconst initialData = {\r\n    tasks: {\r\n        // 'task-1': { id: 'task-1', taskName: 'Garbage', assignedTo: 'AU', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-2': { id: 'task-2', taskName: 'Cook dinner', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-3': { id: 'task-3', taskName: 'Watch movie', assignedTo: 'AU', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-4': { id: 'task-4', taskName: 'Sleep', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-5': { id: 'task-5', taskName: 'Groceries', assignedTo: 'BK', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-6': { id: 'task-6', taskName: 'Laundary', assignedTo: 'AU', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-7': { id: 'task-7', taskName: 'Party', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-8': { id: 'task-8', taskName: 'Others', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-9': { id: 'task-9', taskName: 'well', assignedTo: 'AU', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-10': { id: 'task-10', taskName: 'this', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-11': { id: 'task-11', taskName: 'is', assignedTo: 'YT', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n        // 'task-12': { id: 'task-12', taskName: 'great', assignedTo: 'AU', details: 'loremlpsum', dueDate: '2020-03-03' },\r\n    },\r\n    columns: {\r\n        'column-1': {\r\n            id: 'column-1',\r\n            title: 'All tasks',\r\n            taskIds: []\r\n        },\r\n        'column-2': {\r\n            id: 'column-2',\r\n            title: 'In Progress',\r\n            taskIds: [],\r\n        },\r\n        'column-3': {\r\n            id: 'column-3',\r\n            title: 'Completed',\r\n            taskIds: [],\r\n        }\r\n    },\r\n    columnOrder: ['column-1', 'column-2', 'column-3']\r\n};\r\n\r\n\r\nexport { initialData };","import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport './task.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: '#F76C6C',\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        marginLeft: 5,\r\n    },\r\n}));\r\n\r\nexport default function Task(props) {\r\n\r\n    const whileDragging = {\r\n        backgroundColor: props => true ? \"green\" : \"red\"\r\n    }\r\n    const style = {\r\n        backgroundColor: 'blue',\r\n        fontSize: 18,\r\n        // ...provided.draggableProps.style,\r\n    };\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Draggable draggableId={props.task.id} index={props.index}>\r\n            {\r\n                (provided, snapshot) => (\r\n                    <div>\r\n                        <div className=\"item\"\r\n                            {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}\r\n                            onClick={()=>{props.handleEditTask(props.task, props.columnId)}}\r\n                        >\r\n                            <Avatar className={classes.avatar}>{props.task.assignedTo}</Avatar>\r\n                            {/* <Avatar className={classes.avatar} \r\n                            style={{backgroundColor:'purple'}}>A</Avatar> */}\r\n                            <div className='taskName'>\r\n                                <div>\r\n                                    <span>{props.task.taskName}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span style={{fontSize: '0.7em'}}>\r\n                                        {props.task.dueDate?<span>Due:</span>:\"\"}\r\n                                        {(props.task.dueDate).toString()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <IconButton aria-label=\"More info\" color=\"secondary\">\r\n                                <MoreHorizIcon />\r\n                            </IconButton>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Draggable>\r\n    );\r\n}","import React from 'react';\r\nimport './column.css';\r\nimport Task from './Task';\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\n\r\nexport default function Column(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"colDiv\">\r\n                <p className=\"colTitle\"> \r\n                    {props.column.title}\r\n                    {props.column.title=='All tasks'\r\n                    ?<span onClick={props.handleAddNewTask} style={{cursor:\"pointer\"}}>\r\n                        <IconButton aria-label=\"Add\"  style={{padding:0, position:\"absolute\", marginLeft:5}}>\r\n                            <AddCircleIcon/>\r\n                        </IconButton>\r\n                    </span>\r\n                    :<span></span>}</p> \r\n\r\n                <Droppable droppableId={props.column.id} direction=\"vertical\">\r\n                    {\r\n                        (provided, snapshot) => (\r\n                            <div className=\"taskList\" ref={provided.innerRef}\r\n                            {...provided.droppableProps}>\r\n                                {props.tasks.map((task,index) => <Task \r\n                                key={task.id} task={task} \r\n                                handleEditTask = {props.handleEditTask}\r\n                                index={index}\r\n                                columnId={props.column.id}/>)}\r\n                            {provided.placeholder}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Droppable>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\n//Modal Styles\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: 50,\r\n    },\r\n}));\r\n\r\n\r\nexport default function KanbanModal(props) {\r\n    const classes =  useStyles();\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={props.modalStateOpen}\r\n                onClose={props.handleModalClose}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                BackdropProps={{\r\n                    timeout: 500,\r\n                }}\r\n            >\r\n                <Fade in={props.modalStateOpen}>\r\n                    <div className={classes.paper}>\r\n                        {props.children}\r\n                    </div>\r\n                </Fade>\r\n            </Modal>\r\n        </div>\r\n\r\n\r\n    );\r\n}","import React, { useState, useEffect, useContext, newContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        paddingBottom: 20,\r\n    }\r\n}));\r\n\r\nexport default function TaskForm(props) {\r\n\r\n    var date = (new Date());\r\n    date.setDate(date.getDate() + 1);\r\n    const classes = useStyles();\r\n    const [task, setTask] = useState({\r\n        taskName: \"\",\r\n        taskDetails: \"\",\r\n        assignedTo: \"\",\r\n        dueDate: date.toLocaleDateString('en-US'),\r\n    });\r\n\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        let url = \"http://api.taskiton.wmdd.ca/userlist\";\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*'\r\n                , 'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setUsers(data);\r\n            }).catch(function (err) {\r\n                alert(\"Error - refresh page and try again\");\r\n                console.log(err)\r\n            });\r\n    }, [])\r\n\r\n    let handleChange = (event) => {\r\n        let name = '';\r\n        let value = '';\r\n        if (typeof event.target !== 'undefined') {\r\n            name = event.target.name;\r\n            value = event.target.value;\r\n        }\r\n        else {\r\n            name = 'dueDate';\r\n            value = event.toLocaleDateString('en-US');\r\n        }\r\n\r\n        setTask(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(event) => {\r\n            props.handleAddNewTaskSubmit(task, event)\r\n        }}>\r\n            <div>\r\n                <TextField id=\"standard-secondary\" label=\"Task Name\" color=\"primary\"\r\n                    value={task.taskName} onChange={handleChange} className={classes.textField}\r\n                    name='taskName' required />\r\n            </div>\r\n            <div>\r\n                {/* <InputLabel id=\"demo-simple-select-label\" style={{paddingTop:'5%'}}>Task Details</InputLabel> */}\r\n                <TextareaAutosize aria-label=\"minimum height\" rowsMin={3} placeholder=\"Enter Task Details\"\r\n                    value={task.taskDetails} onChange={handleChange} className={classes.textField}\r\n                    name='taskDetails' />\r\n            </div>\r\n            <div>\r\n                <InputLabel id=\"demo-simple-select-label\" style={{ paddingTop: '8%', paddingBottom: '3%' }}>Assign To</InputLabel >\r\n                <Select\r\n                    native\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={task.assignedTo}\r\n                    onChange={handleChange}\r\n                    name='assignedTo'\r\n                    required>\r\n                    <option value=\"\" hidden>Select a user</option>\r\n                    {users.map(user => <option key={user.user_id} value={user.name}>{(user.name).split(\" \")[0]}</option>\r\n                    )}\r\n                </Select>\r\n            </div>\r\n            <div>\r\n                <InputLabel id=\"demo-simple-select-label\" style={{ paddingTop: '10%', paddingBottom: '3%' }}>Due Date:</InputLabel >\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <DateTimePicker value={task.dueDate} onChange={handleChange} name='dueDate' disablePast />\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n            <br />\r\n            <div style={{width:'100%', textAlign: 'center'}}>\r\n                {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Save\r\n                </Button>\r\n                <Button variant=\"contained\" style={{marginLeft:'5%'}} onClick={props.closeModal}>\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    textField: {\r\n        paddingBottom: 20,\r\n    }\r\n}));\r\n\r\nexport default function EditTaskForm(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [task, setTask] = useState({\r\n        taskName: props.task.taskName,\r\n        taskDetails: props.task.details,\r\n        assignedTo: props.task.assignedTo,\r\n        dueDate: props.task.dueDate\r\n    });\r\n\r\n    let handleChange = (event) => {\r\n        let name = '';\r\n        let value = '';\r\n        if (typeof event.target !== 'undefined') {\r\n            name = event.target.name;\r\n            value = event.target.value;\r\n        }\r\n        else {\r\n            name = 'dueDate';\r\n            value = event.toLocaleDateString('en-US');\r\n        }\r\n        setTask(prevState => {\r\n            return {\r\n                ...prevState,\r\n                [name]: value,\r\n            }\r\n        });\r\n    }\r\n\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        let url = \"http://api.taskiton.wmdd.ca/userlist\";\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*'\r\n                , 'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setUsers(data);\r\n            }).catch(function (err) {\r\n                alert(\"Error - refresh page and try again\");\r\n                console.log(err)\r\n            });\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={(event) => {\r\n                props.handleEditTaskSubmit(task, event, props.task.id)\r\n            }}>\r\n                <div>\r\n                    <TextField id=\"standard-secondary\" label=\"Task Name\" color=\"primary\"\r\n                        value={task.taskName} onChange={handleChange} className={classes.textField}\r\n                        name='taskName' />\r\n                </div>\r\n                <div>\r\n                    {/* <InputLabel id=\"demo-simple-select-label\" style={{paddingTop:'5%'}}>Task Details</InputLabel> */}\r\n                    <TextareaAutosize aria-label=\"minimum height\" rowsMin={3} placeholder=\"Enter Details\"\r\n                        value={task.taskDetails} onChange={handleChange} className={classes.textField}\r\n                        name='taskDetails' />\r\n                </div>\r\n                <div>\r\n                    <InputLabel id=\"demo-simple-select-label\" style={{ paddingTop: '8%', paddingBottom: '3%' }}>Assign To</InputLabel >\r\n                    <Select\r\n                        native\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        value={task.assignedTo}\r\n                        onChange={handleChange}\r\n                        name='assignedTo'\r\n                        required>\r\n                        <option value=\"\" hidden>Select a user</option>\r\n                        {users.map(user => <option key={user.user_id} value={(user.name).split(\" \")[0][0] + (user.name).split(\" \")[1][0]}>{(user.name).split(\" \")[0]}</option>\r\n                        )}\r\n                    </Select>\r\n                </div>\r\n                <div>\r\n                <InputLabel id=\"demo-simple-select-label\" style={{ paddingTop: '10%', paddingBottom: '3%' }}>Due Date:</InputLabel >\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                        <DateTimePicker value={task.dueDate} onChange={handleChange} name='dueDate' disablePast />\r\n                    </MuiPickersUtilsProvider>\r\n                </div>\r\n                <br />\r\n                <div style={{width:'100%', textAlign: 'center'}}>\r\n                    {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                    <Button variant=\"contained\" style={{marginLeft:'5%'}} onClick={props.closeModal}>\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n\r\n            </form>\r\n            <br />\r\n            <div style={{width:'100%', textAlign: 'center'}}>\r\n                <Button variant=\"contained\" color=\"secondary\"\r\n                    onClick={() => { props.handleEditNewTaskDelete(props.task.id) }} >\r\n                    Delete\r\n                </Button>\r\n            </div>\r\n            {/* <input type=\"button\" value=\"Delete\"\r\n                onClick={() => { props.handleEditNewTaskDelete(props.task.id) }} /> */}\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect, useContext, newContext  } from 'react';\r\nimport { initialData } from './HandleKanbanData';\r\nimport Column from './Column';\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport KanbanModal from '../Modal/Modal';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport EditTaskForm from '../TaskForm/EditTaskForm';\r\n\r\nexport default function Kanban() {\r\n\r\n    // const newContext = React.createContext({ color: 'black' });\r\n\r\n    const [data, setData] = useState(null);\r\n    //Fetch initial data\r\n    useEffect(() => {\r\n\r\n        let promise =fetchInitialData();\r\n\r\n        promise.then( result => {\r\n            setData(initialData);\r\n        });\r\n    }, []);\r\n\r\n    let onDragEnd = (result) => {\r\n        console.log(result);\r\n        const { destination, source, draggableId } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        //Task dropped at the same position\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return\r\n        }\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n            //console.log(\"Moving in the same column\");\r\n            const column = data.columns[source.droppableId];\r\n            const newTaskIds = Array.from(column.taskIds);\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newColumn = {\r\n                ...column,\r\n                taskIds: newTaskIds,\r\n            }\r\n\r\n            setData(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    columns: {\r\n                        ...prevState.columns,\r\n                        [newColumn.id]: newColumn,\r\n                    }\r\n                }\r\n            }\r\n            );\r\n        } else if (destination !== null) {\r\n            //console.log(\"Moving to new column\");\r\n            const sourceColumn = data.columns[source.droppableId];\r\n            const newSourceTaskIds = sourceColumn.taskIds;\r\n            newSourceTaskIds.splice(source.index, 1);\r\n\r\n            const destinationColumn = data.columns[destination.droppableId];\r\n            const newDestinationTaskIds = destinationColumn.taskIds;\r\n            newDestinationTaskIds.splice(destination.index, 0, draggableId);\r\n\r\n            const newSourceColumn = {\r\n                ...sourceColumn,\r\n                taskIds: newSourceTaskIds\r\n            }\r\n\r\n            const newDestinationColumn = {\r\n                ...destinationColumn,\r\n                taskIds: newDestinationTaskIds\r\n            }\r\n            setData(prevState => {\r\n                return {\r\n                    ...prevState,\r\n                    columns: {\r\n                        ...prevState.columns,\r\n                        [newSourceColumn.id]: newSourceColumn,\r\n                        [newDestinationColumn.id]: newDestinationColumn,\r\n                    }\r\n\r\n                }\r\n            });\r\n            moveTaskToNewColumn(draggableId, destination);\r\n        }\r\n        //document.body.style.color = \"black\";\r\n        //Call server to update here\r\n    }\r\n\r\n    let onDragStart = () => {\r\n        //document.body.style.color = \"red\";\r\n    }\r\n\r\n    // let handleAddNewTask = () => {\r\n    //     setOpen(true);\r\n    // }\r\n\r\n    let moveTaskToNewColumn = (_taskId, _columnId) =>{\r\n        var data = {\r\n            taskId: _taskId,\r\n            columnId: _columnId.droppableId.split('-')[1],\r\n        }\r\n        let url = \"http://api.taskiton.wmdd.ca/movetask\";\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Accept': 'application/json, text/plain, */*'\r\n            ,'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            console.log(response);\r\n            if (response.status >= 400) {\r\n                //alert(\"Error - refresh page and try moving again\");\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        }).catch(function (err) {\r\n            //alert(\"Error - refresh page and try moving again\");\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    // Modal Handle\r\n    const [modalStateOpen, setmodalStateOpen] = useState(false);\r\n\r\n    const handleModalClose = () => {\r\n        setmodalStateOpen(false);\r\n    }\r\n    /*************************************************************/\r\n    //Could have named the following states better:\r\n    const [currentColumnId, setCurrentColumnId] = useState(\"\");\r\n\r\n    const [isItNewTask, setIsItNewTask] = useState(true);\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    //Adding new task\r\n\r\n    let handleAddNewTask = (colId) => {\r\n        setIsItNewTask(true);\r\n        setmodalStateOpen(true);\r\n        setCurrentColumnId(colId);\r\n    }\r\n\r\n    let handleAddNewTaskSubmit = (val, event) => {\r\n        event.preventDefault();\r\n        if (val.taskName.length < 1) {\r\n            setmodalStateOpen(false);\r\n            return;\r\n        }\r\n\r\n        const allTasks = data.tasks;\r\n        \r\n        let numbOfTasks = Object.keys(allTasks).length;\r\n        let newTaskId = '';\r\n        if(numbOfTasks>0) {\r\n            newTaskId = 'task-' + (++((Array.from(Object.keys(allTasks))[numbOfTasks - 1]).split(\"-\")[1]));\r\n        } else {\r\n            newTaskId = 'task-1';\r\n        }\r\n        \r\n        let assignedUser = \"\";\r\n        if(val.assignedTo)\r\n            assignedUser=val.assignedTo.split(\" \")[0].split(\"\")[0]+val.assignedTo.split(\" \")[1].split(\"\")[0];\r\n        const newTask = {\r\n            id: newTaskId,\r\n            taskName: val.taskName,\r\n            details: val.taskDetails,\r\n            assignedTo: assignedUser,\r\n            dueDate: val.dueDate,\r\n        };\r\n        allTasks[newTaskId] = newTask; // update the state\r\n\r\n        //Updating the column\r\n        const currentColumnTaskIds = data.columns[currentColumnId].taskIds;\r\n        currentColumnTaskIds.splice(currentColumnTaskIds.length, 0, newTaskId);\r\n        console.log(currentColumnTaskIds);\r\n\r\n        //lets replace the whole column with new ids\r\n        let updatedColumn = {\r\n            ...data.columns[currentColumnId],\r\n            taskIds: currentColumnTaskIds\r\n        }\r\n\r\n        //Updating state\r\n        setData(prevState => {\r\n            return {\r\n                ...prevState,\r\n                tasks: allTasks,\r\n                columns: {\r\n                    ...prevState.columns,\r\n                    [currentColumnId]: updatedColumn,\r\n                }\r\n            }\r\n        }\r\n        );\r\n        addNewTaskToDb(newTask, val.assignedTo);\r\n        setmodalStateOpen(false);\r\n    }\r\n\r\n    let addNewTaskToDb = (newTask, assignedUser)=> {\r\n        \r\n        var data = {\r\n            ...newTask,\r\n            assignedTo:assignedUser,\r\n            columnId: 1,\r\n        }\r\n        console.log(data);\r\n        let url = \"http://api.taskiton.wmdd.ca/tasks\";\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Accept': 'application/json, text/plain, */*'\r\n            ,'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            console.log(response);\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        }).catch(function (err) {\r\n            alert(\"Error - refresh page and try again\");\r\n            console.log(err)\r\n        });\r\n    }\r\n    /*************************************************************/\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n\r\n    const [editTaskDetails, setEditTaskDetails] = useState(\"\");\r\n    const [editColumnId, setEditColumnId] = useState(\"\");\r\n\r\n    //Edit Task Details\r\n    let handleEditTask = (task, columnId) => {\r\n        setIsItNewTask(false);\r\n        setmodalStateOpen(true);\r\n        setEditTaskDetails(task);\r\n        setEditColumnId(columnId);\r\n    }\r\n\r\n    //Editing task details\r\n    let handleEditTaskSubmit = (task, event, _taskId) => {\r\n        event.preventDefault();\r\n\r\n        const allTasks = data.tasks;\r\n        allTasks[_taskId] = {\r\n            id: _taskId,\r\n            taskName: task.taskName,\r\n            details: task.taskDetails,\r\n            assignedTo: task.assignedTo,\r\n            dueDate: task.dueDate\r\n        }\r\n\r\n        setData(prevState => {\r\n            return {\r\n                ...prevState,\r\n                tasks: allTasks,\r\n            }\r\n        });\r\n\r\n        setmodalStateOpen(false);\r\n        editTaskFromDb(allTasks[_taskId]);\r\n    }\r\n\r\n    let editTaskFromDb = (_task)=> {\r\n        \r\n        let url = \"http://api.taskiton.wmdd.ca/updatetask\";\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: { 'Accept': 'application/json, text/plain, */*'\r\n            ,'Content-Type': 'application/json' },\r\n            body: JSON.stringify(_task)\r\n        }).then(response => {\r\n            console.log(response);\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        }).catch(function (err) {\r\n            alert(\"Error - refresh page and try again\");\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    //Delete the card\r\n    let handleEditNewTaskDelete = (_taskId) => {\r\n        const allTasks = data.tasks;\r\n        delete allTasks[_taskId];\r\n\r\n        const currentColumnTaskIds = data.columns[editColumnId].taskIds;\r\n        const indexToDelete = currentColumnTaskIds.indexOf(_taskId);\r\n        currentColumnTaskIds.splice(indexToDelete, 1);\r\n\r\n        const newColumn = {\r\n            ...data.columns[editColumnId],\r\n            taskIds: currentColumnTaskIds\r\n        }\r\n\r\n        setData(prevState => {\r\n            return {\r\n                ...prevState,\r\n                tasks: allTasks,\r\n                columns: {\r\n                    ...prevState.columns,\r\n                    [editColumnId]: newColumn,\r\n                }\r\n            }\r\n        });\r\n        setmodalStateOpen(false);\r\n        deleteTaskFromDb(_taskId)\r\n    }\r\n\r\n    let deleteTaskFromDb = (_taskId)=> {\r\n        \r\n        var data = {\r\n            task_id : _taskId\r\n        }\r\n\r\n        let url = \"http://api.taskiton.wmdd.ca/tasks\";\r\n        fetch(url, {\r\n            method: 'DELETE',\r\n            headers: { 'Accept': 'application/json, text/plain, */*'\r\n            ,'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(response => {\r\n            console.log(response);\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n        }).catch(function (err) {\r\n            alert(\"Error - refresh page and try again\");\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    let fetchInitialData = () => {\r\n        return new Promise((resolve, reject) => {\r\n            const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n            const url = 'http://api.taskiton.wmdd.ca/tasks';\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    Object.keys(data).map(task => {\r\n                        initialData.tasks = {\r\n                            ...initialData.tasks,\r\n                            [task] : {\r\n                                id: data[task].task_id,\r\n                                taskName: data[task].task_name,\r\n                                assignedTo: data[task].user_name.split(\" \")[0][0] + data[task].user_name.split(\" \")[1][0],\r\n                                details: data[task].task_details,\r\n                                dueDate: data[task].due_date\r\n                            }\r\n                        }\r\n                    })\r\n                    fetch(\"http://api.taskiton.wmdd.ca/columnmapping\")\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        \r\n                        Object.keys(data).map(column=>{\r\n                            initialData.columns = {\r\n                                ...initialData.columns,\r\n                                [column] : {\r\n                                    ...initialData.columns[column],\r\n                                    taskIds : data[column]\r\n                                }\r\n                            }\r\n                            //console.log(column);\r\n                        }) \r\n                        if (data)\r\n                            resolve(\"Promise resolved successfully\");\r\n                        else\r\n                            reject(Error(\"Promise rejected\"));\r\n                    })\r\n                    //console.log(initialData);\r\n                })\r\n\r\n        })\r\n    }\r\n\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    let closeModal = () => {\r\n        setmodalStateOpen(false);\r\n    }\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    /*************************************************************/\r\n    if (!data) {\r\n        return <div />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\r\n                {data.columnOrder.map((columnId) => {\r\n                    let column = data.columns[columnId];\r\n                    let tasks = column.taskIds.map(taskId => data.tasks[taskId]);\r\n\r\n                    return (\r\n                        <Column key={column.id} column={column} tasks={tasks}\r\n                            handleAddNewTask={() => { handleAddNewTask(column.id) }}\r\n                            handleEditTask={handleEditTask} />\r\n                    )\r\n                })}\r\n            </DragDropContext>\r\n            <KanbanModal modalStateOpen={modalStateOpen} handleModalClose={handleModalClose}>\r\n                {isItNewTask ? <TaskForm handleAddNewTaskSubmit={handleAddNewTaskSubmit} \r\n                closeModal={closeModal}/>\r\n                    : <EditTaskForm\r\n                        task={editTaskDetails}\r\n                        handleEditTaskSubmit={handleEditTaskSubmit}\r\n                        handleEditNewTaskDelete={handleEditNewTaskDelete}\r\n                        closeModal={closeModal}\r\n                    />}\r\n            </KanbanModal>\r\n        </div>\r\n    );\r\n}\r\n\r\n","const userData = {\r\n    \"users\": [\r\n        {\r\n          \"userId\": \"1\",\r\n          \"displayname\": \"Fred\"\r\n        },\r\n        {\r\n          \"userId\": \"2\",\r\n          \"displayname\": \"Ben\"\r\n        },\r\n        {\r\n          \"userId\": \"3\",\r\n          \"displayname\": \"Sarah\"\r\n        }\r\n      ]\r\n};\r\n\r\nexport default userData;","import { useState } from 'react';\r\n\r\nfunction useInput()\r\n{\r\n  let [value, setValue] = useState('');\r\n  let onChange = function(event){\r\n    setValue(event.target.value);\r\n  };\r\n  return {\r\n    value,\r\n    setValue,\r\n    onChange\r\n  };\r\n}\r\n\r\nexport default useInput;\r\n","import React, { useState, useEffect} from 'react';\r\nimport './Chat.css';\r\nimport UserData from \"./userData\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\nimport useInput from './InputControl';\r\nimport PubNub from 'pubnub';\r\nimport ApiConfig from '../../config/config'\r\nimport {Card,Chip, Divider, CardActions, CardContent,List, ListItem,Button,Typography,Input} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[100]),\r\n    backgroundColor: deepPurple[500],\r\n\r\n  },\r\n  chatAvatar: {\r\n    backgroundColor: '#e6e6e6',\r\n    height: '7vh',\r\n    overflow:'auto',\r\n    marginLeft: '3vw',\r\n    borderRadius: '10px',\r\n    boxShadow:'5px 5px 21px -15px rgba(64,56,64,0.69)'\r\n    \r\n  },\r\n  messageContainer:{\r\n    position:'relative',\r\n    top:'4vh'\r\n  },\r\n  chatInfoContainer:{\r\n    position:'relative',\r\n    top:'3vh'\r\n  },\r\n  date:{\r\n    fontSize:'10px',\r\n    color:'#A9A9A9',\r\n    marginLeft:'1vw'\r\n  },\r\n  chatUsername:{\r\n    fontWeight:'420',\r\n    marginLeft:'3vw'\r\n\r\n  },\r\n  mainMessage:{\r\n    \r\n     marginTop:'2vh'\r\n  },\r\n  avatar: {\r\n    position: 'absolute',\r\n    marginTop:'3vh',\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: '#F76C6C',\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n  \r\n}\r\n}));\r\n\r\n// Our main Component, the parent to all the others, the one to rule them all.\r\nfunction App() {\r\n  const classes = useStyles();\r\n  //Set a default channel incase someone navigates to the base url without\r\n  //specificfying a channel name parameter.\r\n  let defaultChannel = \"Global\";\r\n \r\n \r\n  const [channel,setChannel] = useState(defaultChannel);\r\n  const [messages,setMessages] = useState([]);\r\n  // const [username] = useState([UserData.users[0].displayname,Math.floor(Math.random() * 10)].join('-'));\r\n  const [username] = useState(UserData.users[1].displayname);\r\n  // const tempChannel = useInput();\r\n  const tempMessage = useInput();\r\n\r\n  function getUserListFromAPI(){\r\n\r\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n        const url = 'http://api.taskiton.wmdd.ca/users';\r\n        fetch(url, {\r\n            headers: { 'Content-Type': 'application/json' },\r\n\r\n        }).then(function (response) {\r\n            // console.log(response.status)\r\n            if (response.status >= 400) {\r\n                throw new Error(\"Bad response from server\");\r\n            } \r\n            return response.json();\r\n        }).then(function (result) {\r\n            console.log(result);\r\n            if(result.code === 204){\r\n                alert(result.success);\r\n            }else if (result.code === 200){\r\n               \r\n            }\r\n        }).catch(function (err) {\r\n            console.log(err)\r\n        });\r\n  }\r\n  //This is where we set up PubNub and handle events that come through. \r\n  useEffect(()=>{\r\n    getUserListFromAPI();\r\n    console.log(\"setting up pubnub\");\r\n    const pubnub = new PubNub({\r\n      publishKey: ApiConfig.PUBLISHKEY,\r\n      subscribeKey: ApiConfig.SUBSCRIBEKEY,\r\n      uuid: username\r\n    });\r\n\r\n    \r\n    pubnub.addListener({\r\n     status: function(statusEvent) {\r\n       if (statusEvent.category === \"PNConnectedCategory\") {\r\n         console.log(\"Connected to PubNub!\")\r\n       }\r\n     },\r\n     message: (msg) => {\r\n       if(msg.message.text){\r\n        const unixTimestamp = msg.timetoken / 10000000;\r\n        const gmtDate = new Date(unixTimestamp * 1000);\r\n        const localeDateTime = gmtDate.toLocaleString();\r\n         console.log(msg.message.text+\"----\" + localeDateTime);\r\n         let newMessages = [];\r\n         newMessages.push({\r\n           uuid:msg.message.uuid,\r\n           text: msg.message.text,\r\n           date: localeDateTime\r\n         });\r\n         setMessages(messages=>messages.concat(newMessages))\r\n       }\r\n     },\r\n     presence: function(p) {\r\n      // handle presence\r\n      var timeout = p.timetoken\r\n      var occupancy = p.occupancy; // No. of users connected with the channel\r\n      var state = p.state; // User State\r\n      var publishTime = p.timestamp; // Publish timetoken\r\n      var timetoken = p.timeout;  // Current timetoken\r\n      console.log(occupancy)\r\n      }\r\n    });\r\n\r\n      pubnub.hereNow({\r\n        channels: ['Global'],\r\n        includeUUIDs: true,\r\n        includeState: true,\r\n      }, (status, response) => {\r\n        //console.log(response);\r\n      });\r\n\r\n     //Subscribes to the channel in our state\r\n     pubnub.subscribe({\r\n         channels: [channel],\r\n         withPresence: true\r\n     });\r\n     pubnub.history(\r\n     {\r\n         channel: channel,\r\n         count: 10, // 100 is the default\r\n         stringifiedTimeToken: true // false is the default\r\n     }, function (status, response){\r\n       \r\n        let newMessages = [];\r\n         for (let i  = 0; i < response.messages.length;i++){\r\n          const unixTimestamp = response.messages[i].timetoken / 10000000;\r\n          const gmtDate = new Date(unixTimestamp * 1000);\r\n          const localeDateTime = gmtDate.toLocaleString();\r\n           newMessages.push({\r\n             uuid:response.messages[i].entry.uuid ,\r\n             text: response.messages[i].entry.text,\r\n             date: localeDateTime\r\n           });\r\n           //console.log(response.messages)\r\n         }\r\n         setMessages(messages=>messages.concat(newMessages));\r\n       }\r\n     );\r\n    return function cleanup(){\r\n      console.log(\"shutting down pubnub\");\r\n      pubnub.unsubscribeAll();\r\n      setMessages([]);\r\n    }\r\n  },[channel, username]);\r\n  \r\n\r\n  function handleKeyDown(event){\r\n    if(event.target.id === \"messageInput\"){\r\n      if (event.key === 'Enter') {\r\n        publishMessage();\r\n      }\r\n    }\r\n    // else if(event.target.id === \"channelInput\"){\r\n    //   if (event.key === 'Enter') {\r\n    //     //Navigates to new channels\r\n    //     const newChannel = tempChannel.value.trim();\r\n    //     if(newChannel){\r\n    //       if(channel !== newChannel){\r\n    //         //If the user isnt trying to navigate to the same channel theyre on\r\n    //         setChannel(newChannel);\r\n    //         let newURL = window.location.origin + \"?channel=\" + newChannel;\r\n    //         window.history.pushState(null, '',newURL);\r\n    //         tempChannel.setValue('');\r\n    //       }\r\n    //     }else{\r\n    //       //If the user didnt put anything into the channel Input\r\n    //       if(channel !== \"Global\"){\r\n    //         //If the user isnt trying to navigate to the same channel theyre on\r\n    //         setChannel(\"Global\");\r\n    //         let newURL = window.location.origin;\r\n    //         window.history.pushState(null, '',newURL);\r\n    //         tempChannel.setValue('');\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n  }\r\n\r\n  //Publishing messages via PubNub\r\n  function publishMessage(){\r\n   if (tempMessage.value) {\r\n     let messageObject = {\r\n       text: tempMessage.value,\r\n       uuid: username\r\n     };\r\n\r\n     const pubnub = new PubNub({\r\n        publishKey: \"pub-c-10978436-24d2-4d1f-aadf-e88df92715b3\",\r\n        subscribeKey: \"sub-c-1ae870c6-5741-11ea-814d-0ecb550e9de2\",\r\n        uuid: username\r\n      });\r\n     pubnub.publish({\r\n       message: messageObject,\r\n       channel: channel\r\n     });\r\n     tempMessage.setValue('');\r\n   }\r\n }\r\n \r\n    return(\r\n      <Card>\r\n          <CardContent>\r\n            <div className=\"top\">\r\n              <Typography variant=\"h5\" inline >\r\n                Group Chat\r\n                </Typography>\r\n            </div>\r\n            <div >\r\n              \r\n              <Log messages={messages}/>\r\n            </div>\r\n          </CardContent>\r\n          <CardActions>\r\n            <Input\r\n              placeholder=\"Enter a message\"\r\n              fullWidth={true}\r\n              id=\"messageInput\"\r\n              value={tempMessage.value}\r\n              onChange={tempMessage.onChange}\r\n              onKeyDown={handleKeyDown}\r\n              inputProps={{'aria-label': 'Message Field',}}\r\n              autoFocus={true}\r\n            />\r\n            <Button\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              onClick={publishMessage}\r\n              >\r\n              Submit\r\n            </Button>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n}\r\n\r\n//Log functional component that is the list of messages\r\nfunction Log(props) {\r\n\r\n  return(\r\n    <List style={{maxHeight:'50vh', overflow:'auto'}} component=\"nav\">\r\n      <ListItem>\r\n      <Typography component=\"div\">\r\n        { props.messages.map((item, index)=>(\r\n          <Message key={index} uuid={item.uuid} text={item.text} date={item.date}/>\r\n        )) }\r\n      </Typography>\r\n      </ListItem>\r\n    </List>\r\n  )\r\n};\r\n\r\n//Our message functional component that formats each message.\r\nfunction Message(props){\r\n  const classes = useStyles();\r\n  let userName = props.uuid;\r\n  let message = props.text;\r\n  let breakMessage = message.replace(/(.{5})/g, \"$1<br>\");\r\n  //console.log(document.getElementById('chip'))\r\n  // console.log(breakMessage)\r\n  let boldUsername = userName;\r\n\r\n  var messageIndividual = `${boldUsername} - ${props.text}`\r\n  return (\r\n    <div>\r\n      <ListItemText className={classes.mainMessage}>  \r\n      \r\n      <Avatar className={classes.avatar}>YT</Avatar>\r\n      <div className={classes.chatInfoContainer}>\r\n      <span className={classes.chatUsername}>{props.uuid}</span>\r\n      <span className={classes.date}>{props.date}</span>\r\n      </div>\r\n     \r\n      <div className={classes.messageContainer}>\r\n      <Chip id=\"chip\" className={classes.chatAvatar} label={breakMessage} />\r\n      </div>\r\n      </ListItemText>\r\n    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nexport default function Sample() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={handleOpen}>\r\n        react-transition-group\r\n      </button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\r\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './teamList.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    avatar: {\r\n        color: theme.palette.getContrastText(deepOrange[500]),\r\n        backgroundColor: \"purple\",\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n        marginTop: \"20px\",\r\n    },\r\n}));\r\n\r\nexport default function TeamList() {\r\n\r\n    let classes = useStyles();\r\n\r\n    const [users, setUsers] = useState([]);\r\n    useEffect(() => {\r\n        let url = \"http://api.taskiton.wmdd.ca/userlist\";\r\n        fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json, text/plain, */*'\r\n                , 'Content-Type': 'application/json'\r\n            }\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                alert(\"Error - refresh page and try again\");\r\n            }\r\n            return response.json();\r\n        })\r\n            .then(data => {\r\n                //console.log(data);\r\n                setUsers(data);\r\n            }).catch(function (err) {\r\n                alert(\"Error - refresh page and try again\");\r\n                console.log(err)\r\n            });\r\n    }, [])\r\n\r\n    return(\r\n        <div>\r\n            {users.map(user => <Avatar title={user.name} className={classes.avatar} key={user.user_id}>{(user.name).split(\" \")[0][0]}{(user.name).split(\" \")[1][0]}</Avatar>\r\n                    )}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Kanban from './kanban/Kanban';\r\nimport TeamChat from './TeamChat/Chat';\r\nimport Announcement from './Announcement';\r\nimport Sample from './Sample';\r\nimport TeamList from './TeamList/TeamList';\r\nimport './dashboard.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    gridTeam: {\r\n        boxShadow: \"2px 3px 5px #888888\",\r\n        width:\"5vw\",\r\n        height:\"90vh\", \r\n        display:\"flex\",\r\n        borderRadius: \"2%\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\",       \r\n        [theme.breakpoints.down('xs')]: {\r\n            display:\"none\",\r\n        }\r\n    },\r\n    gridKanban: { \r\n        width:\"70vw\",\r\n        height:\"91vh\",\r\n        overflow: \"auto\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            width:\"100vw\",\r\n        }\r\n    },\r\n    gridChat: {\r\n        boxShadow: \"2px 3px 5px #888888\",\r\n        width:\"25vw\",\r\n        height:\"91vh\",\r\n        [theme.breakpoints.down('xs')]: {\r\n            display:\"none\",\r\n        }\r\n    },\r\n    gridAnnouncement:{\r\n        height:'50%'\r\n    }\r\n\r\n}));\r\n\r\nexport default function Dashboard() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n                <Grid item className={classes.gridTeam}>\r\n                    <TeamList/>\r\n                </Grid>\r\n                <Grid item className={classes.gridKanban}>\r\n                <Kanban/>\r\n                </Grid>\r\n                <Grid item className={classes.gridChat}>\r\n                    {/* <Announcement className={classes.gridAnnouncement}/> */}\r\n                    <TeamChat/>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const loginPageStyle = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        \r\n    },\r\n    formStyle:{\r\n        display: 'block',\r\n        textAlign: 'right',\r\n        color: theme.palette.text.secondary,\r\n        width: '100%',\r\n    },\r\n    signupImage:{\r\n        width:'70%',\r\n        margin:'auto',\r\n        padding:'5vw',\r\n        paddingTop:'6vh',\r\n        [theme.breakpoints.between('xs','sm')]: {\r\n            paddingTop:'15vh',\r\n            padding:0,\r\n            width:'100%'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            display: 'none',\r\n            padding:0\r\n        }\r\n    },\r\n    signUpButton:{\r\n        backgroundColor: '#F76C6C',\r\n        width:'45%',\r\n        height: '50px',\r\n        display: 'inline',\r\n        marginLeft:'auto',\r\n        marginRight:'1vw',\r\n        marginTop:'3vh',\r\n        '&:hover': {\r\n            backgroundColor: '#dc5a5a',\r\n            borderColor: '#dc5a5a',\r\n            boxShadow: 'none',\r\n          },\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F76C6C',\r\n            borderColor: '#F76C6C',\r\n          },\r\n    },\r\n    loginButton:{\r\n        backgroundColor: '#A8D0E6',\r\n        width:'65%',\r\n        height: '50px',\r\n        display: 'block',\r\n        marginLeft:'auto',\r\n        marginRight:'auto',\r\n        marginTop:'3vh',\r\n        '&:hover': {\r\n            backgroundColor: '#86b8d4',\r\n            borderColor: '#86b8d4',\r\n            boxShadow: 'none',\r\n          },\r\n          '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#A8D0E6',\r\n            borderColor: '#A8D0E6',\r\n          },\r\n    }\r\n   \r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport {loginPageStyle} from '../LoginStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst useStyles = loginPageStyle\r\n\r\nexport default function FormItem (props){\r\n    const classes = useStyles();\r\n    const formItem = {\r\n        width: '100%',\r\n        marginTop:'2.5vh',\r\n        color:'secondary',\r\n        marginLeft: 'auto',\r\n        '&:active': {\r\n            boxShadow: 'none',\r\n            backgroundColor: '#F76C6C',\r\n            borderColor: '#F76C6C',\r\n          },\r\n    }\r\n    return(\r\n        <Grid item xs={12}>\r\n                <TextField color=\"secondary\" type={props.type}style={formItem} name={props.name} label={props.label} value={props.value} onChange={props.onChange} variant=\"outlined\" />\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { loginPageStyle } from './LoginStyle';\r\nimport { palette } from '@material-ui/system';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {Redirect} from 'react-router';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormItem from './components/formItem'\r\nimport signupLogo from '../images/signupImage.svg'\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\n\r\nconst useStyles = loginPageStyle\r\n\r\nexport default function Login() {\r\n    \r\n\r\n    let history = useHistory();\r\n    const [user, setUser] = useState({\r\n        mail: \"\",\r\n        password: \"\"\r\n\r\n    });\r\n    \r\n    const context = useContext(AuthContext);\r\n    const { toggleAuth } = context; \r\n\r\n    const classes = useStyles();\r\n    const frmStyle = {\r\n        height: '75vh',\r\n        paddingLeft: '7vw',\r\n        paddingRight: '7vw',\r\n        paddingTop: '5vh',\r\n        // boxShadow: 'rgb(216, 215, 215) 1px 2px 10px 2px',\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        var data = {\r\n            email: user.mail,\r\n            password: user.password,\r\n        }\r\n        console.log(data);\r\n        const proxyurl = 'https://cors-anywhere.herokuapp.com/';\r\n        const url = 'http://api.taskiton.wmdd.ca/user';\r\n        fetch(proxyurl + url, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        }).then(function (response) {\r\n            // console.log(response.status)\r\n            if (response.status >= 400) {\r\n                throw new Error(\"Bad response from server\");\r\n            } \r\n            return response.json();\r\n        }).then(function (result) {\r\n            \r\n            console.log(result);\r\n            if(result.code === 204){\r\n                alert(result.success);\r\n            }else if (result.code === 200){\r\n                localStorage.setItem(\"isAuth\", true)\r\n                toggleAuth(true);\r\n                history.push(\"/dashboard\");\r\n            }\r\n        }).catch(function (err) {\r\n            console.log(err)\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target\r\n        \r\n        // //In progress\r\n        // if(name === 'mail'){\r\n        //     const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n        //      if(!validEmailRegex.test(value)){\r\n        //         // console.log(FormItem().formIte)\r\n        //         console.log('This is not email Adress');\r\n        //      }\r\n        // }\r\n        setUser(prevState => {\r\n            // console.log(prevState)\r\n            return {\r\n                ...prevState,\r\n                [name]: value\r\n            }    \r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.formStyle}>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <img className={classes.signupImage} src={signupLogo}></img>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <form onSubmit={(event) => handleSubmit(event)} style={frmStyle} noValidate autoComplete=\"off\">\r\n                        <h1 style={{ textAlign: 'center', fontSize: '2.1em', marginTop: '0', color: 'black' }}>Login To System</h1>\r\n                        <FormItem style={{ marginTop: '1vh' }} label=\"Email\" name='mail' value={user.mail} onChange={(event) => handleChange(event)} />\r\n                        <FormItem type='password' label=\"Password\" name='password' value={user.password} onChange={(event) => handleChange(event)} />\r\n                        <Button  type='submit' className={classes.loginButton} variant=\"contained\" color=\"primary\" on> LOGIN </Button>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport { Doughnut } from 'react-chartjs-2';\r\nconst pieOptions = {\r\n    title: \"\",\r\n    pieHole: 0.6,\r\n    slices: [\r\n        {\r\n            color: \"#007fad\"\r\n        },\r\n        {\r\n            color: \"#e9a227\"\r\n        }\r\n    ],\r\n    legend: {\r\n        position: \"bottom\",\r\n        alignment: \"center\",\r\n        textStyle: {\r\n            color: \"233238\",\r\n            fontSize: 14\r\n        }\r\n    },\r\n    tooltip: {\r\n        showColorCode: true\r\n    },\r\n    chartArea: {\r\n        left: 0,\r\n        top: 0,\r\n        width: \"100%\",\r\n        height: \"80%\"\r\n    },\r\n    fontName: \"Roboto\"\r\n};\r\n\r\nexport default function TaskPieChart() {\r\n    const [chartImageURI, setChartImageURI] = useState(\"\");\r\n    return (\r\n        <div className=\"App\">\r\n            <Chart\r\n                chartType=\"PieChart\"\r\n                data={[[\"Completed\", \"Pending\"], [\"Completed\", 12], [\"Pending\", 5.5]]}\r\n                options={pieOptions}\r\n                graph_id=\"PieChart\"\r\n                width={\"100%\"}\r\n                height={\"42vh\"}\r\n                legend_toggle\r\n                style={{marginTop:'1%'}}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Chart from \"react-google-charts\"\r\n\r\nconst data = [\r\n    [\"Date\", \"Arsh\", \"Yalcin\"],\r\n    [\"Week1\", 10, 4],\r\n    [\"Week2\", 11, 16],\r\n    [\"Week3\", 6, 2],\r\n    [\"Week4\", 3, 5]\r\n];\r\nconst options = {\r\n    title: \"House Performance\",\r\n    curveType: \"function\",\r\n    legend: { position: \"bottom\" }\r\n};\r\n\r\nexport default function UserLineChart() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Chart\r\n                chartType=\"LineChart\"\r\n                width=\"100%\"\r\n                height=\"500px\"\r\n                data={data}\r\n                options={options}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TaskPieChart from './TaskPieChart';\r\nimport UserLineChart from './UserLineChart';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    userLineChart: {\r\n        height: '91vh',\r\n        marginTop: '2%',\r\n    }, generalStat: {\r\n        height: '40vh',\r\n    }, taskPieChart: {\r\n        height: '45.5vh',\r\n    }\r\n\r\n}));\r\n\r\nexport default function Analytics() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={5} >\r\n                    <Grid item xs={12} className={classes.generalStat}>\r\n                        <Paper style={{ width: '50%', margin: 'auto', height: '80%', textAlign: 'center' }}>\r\n                            <div style={{position:'relative', top:'25%', color:'#F76C6C'}}>\r\n                                <h2>Total Tasks:</h2>\r\n                                <h2>250</h2>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} className={classes.taskPieChart}>\r\n                        <TaskPieChart />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sm={7} className={classes.userLineChart}>\r\n                    <UserLineChart/> \r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Team() {\r\n\r\n    return(\r\n        <div>\r\n            Team Page\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './contact.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: theme.spacing(16),\r\n        height: theme.spacing(16),\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Contact = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Paper variant=\"outlined\" square className='formContainer'>\r\n            <form onSubmit={()=>{alert(\"Thank you for the message, we will get back to you soon!\")}}>\r\n                <label for=\"fname\"><b>Name</b></label>\r\n                <input className=\"contactInput\" type=\"text\" id=\"fname\" name=\"firstname\" placeholder=\"Your name..\" required/>\r\n                <label for=\"email\"><b>Email</b></label>\r\n                <input className=\"contactInput\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"Your email..\" required/>\r\n                <label for=\"msg\"><b>Message</b></label>\r\n                <input className=\"contactInput\" type=\"text\" id=\"msg\" name=\"msg\" placeholder=\"Your message..\" required style={{height:150}}/>\r\n                <input className=\"contactSubmit\" type=\"submit\" value=\"Contact Us\"\r\n                />\r\n            </form>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Contact;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NavBar from './landing/components/NavBar';\r\nimport HamNav from './landing/components/HamNav';\r\nimport LandingPage from './landing/LandingPage';\r\nimport Signup from './signup/Signup';\r\nimport Dashboard from './dashboard/Dashboard';\r\nimport Login from './login/Login';\r\nimport Analytics from './Analytics/Analytics';\r\nimport Team from './Team/Team';\r\nimport AuthContextProvider, { AuthContext } from './context/AuthContext';\r\nimport Contact from './contact/Contact';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nav: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'right',\r\n    color: theme.palette.text.secondary,\r\n    height: '4vh',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '56px',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n  const [login,setLogin] = useState({check:'false'});\r\n  \r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  const context = useContext(AuthContext);\r\n  const {isAuthenticated} = context;\r\n  return (\r\n      <Router>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12} >\r\n            {(windowDimensions.width > 600) ? <Paper className={classes.nav}><NavBar /></Paper> : <Paper className={classes.nav}><HamNav /></Paper>}\r\n          </Grid>\r\n        </Grid>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={LandingPage} />\r\n          <Route exact path=\"/signup\" component={Signup} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/team\" component={Team} />\r\n          <Route exact path=\"/contact\" component={Contact} />\r\n          {isAuthenticated?\r\n            <div>\r\n              <Route exact path=\"/dashboard\" component={Dashboard} />\r\n              <Route exact path=\"/analytics\" component={Analytics} />\r\n            </div>:''}\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport App from './App';\r\nimport AuthContextProvider from './context/AuthContext';\r\n\r\nexport default function Main() {\r\n\r\n    return(\r\n        <AuthContextProvider>\r\n            <App/>\r\n        </AuthContextProvider>\r\n    );\r\n}","module.exports = __webpack_public_path__ + \"static/media/signupImage.29a04443.svg\";"],"sourceRoot":""}