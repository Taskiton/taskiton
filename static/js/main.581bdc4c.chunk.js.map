{"version":3,"sources":["images/task-icons.svg","landing/components/NavBar.js","landing/components/HamNav.js","landing/LandingPageStyle.js","landing/LandingPage.js","signup/Signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","marginLeft","spacing","paddingRight","padding","breakpoints","down","margin","buttonStyle","backgroundColor","color","width","marginTop","linkStyle","fontWeight","fontFamily","position","left","between","NavBar","props","classes","preventDefault","event","isHamNav","display","textAlign","paddingTop","float","Typography","className","Box","to","style","href","onClick","component","Button","variant","defaultProps","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","height","appBarShift","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","HamNav","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","landingPageStyle","nav","palette","text","secondary","promo1","promo2","landingPhoto","landingMotto","LandingPage","Grid","container","item","xs","sm","fontSize","src","landingLogo","Signup","getWindowDimensions","window","innerWidth","innerHeight","App","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Paper","exact","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,wC,gRCQrCC,EAAYC,aAAW,SAAAC,GAAK,YAAK,CACrCC,KAAK,aACHC,WAAYF,EAAMG,QAAQ,GAC1BC,aAAc,MACdC,QAAS,OAKRL,EAAMM,YAAYC,KAAK,MAAQ,CAC9BC,OAAQ,OACRH,QAAS,QAGbI,YAAY,aACVP,WAAYF,EAAMG,QAAQ,GAC1BO,gBAAiB,UACjBC,MAAO,SAENX,EAAMM,YAAYC,KAAK,MAAQ,CAC9BK,MAAO,OACPC,UAAWb,EAAMG,QAAQ,GACzBD,WAAY,IAGhBY,WAAS,GACPC,WAAY,OACZJ,MAAO,QACPK,WAAY,aACZC,SAAU,WACVC,KAAM,OALC,cAMNlB,EAAMM,YAAYa,QAAQ,KAAM,MAAQ,CACvCjB,WAAYF,EAAMG,QAAQ,GAC1Bc,SAAU,WACVC,KAAM,QATD,cAWNlB,EAAMM,YAAYC,KAAK,MAAQ,CAE9BU,SAAU,WACVC,KAAM,QAdD,OAuBI,SAASE,EAAOC,GAC7B,IAAMC,EAAUxB,IAEVyB,EAAiB,SAAAC,GAAK,OAAIA,EAAMD,kBAEhCT,EAAaO,EAAMI,SACvB,CACEC,QAAS,QACTC,UAAW,SACXC,WAAY,MACZpB,OAAQ,QAEN,CACFJ,aAAc,KACdyB,MAAO,QAIX,OACE,6BACE,kBAACC,EAAA,EAAD,CAAYC,UAAWT,EAAQrB,MAC7B,kBAAC+B,EAAA,EAAD,CAAKD,UAAWT,EAAQR,WACtB,kBAAC,IAAD,CAAMmB,GAAG,IAAIC,MAAOpB,EAAWiB,UAAWT,EAAQR,WAAlD,QAGA,kBAAC,IAAD,CAAMqB,KAAK,IAAIC,QAASb,EAAgBW,MAAOpB,EAAWiB,UAAWT,EAAQR,WAA7E,WAGA,kBAAC,IAAD,CAAMqB,KAAK,IAAIC,QAASb,EAAgBW,MAAOpB,EAAWiB,UAAWT,EAAQR,WAA7E,eAIF,kBAACkB,EAAA,EAAD,CAAKK,UAAU,QAEb,kBAAC,IAAD,CAAMJ,GAAG,WACP,kBAACK,EAAA,EAAD,CAAQC,QAAQ,YAAYR,UAAWT,EAAQb,YAAayB,MAAO,CAAExB,gBAAiB,YAAtF,WAGF,kBAAC4B,EAAA,EAAD,CAAQC,QAAQ,YAAYR,UAAWT,EAAQb,aAA/C,mBAzCVW,EAAOoB,aAAe,CACpBf,UAAU,G,oICrCN3B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJyB,QAAS,QAEXe,OAAQ,CACNC,WAAY1C,EAAM2C,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ7C,EAAM2C,YAAYE,OAAOC,MACjCC,SAAU/C,EAAM2C,YAAYI,SAASC,gBAEvCC,OAAQ,MACRvC,gBAAgB,WAElBwC,YAAa,CACXtC,MAAM,eAAD,OAfW,IAeX,OACL8B,WAAY1C,EAAM2C,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQ7C,EAAM2C,YAAYE,OAAOM,QACjCJ,SAAU/C,EAAM2C,YAAYI,SAASK,iBAEvCC,YApBgB,KAsBlBC,MAAO,CACLC,SAAU,GAEZC,KAAM,CACJ9B,QAAS,QAEX+B,OAAQ,CACN7C,MA7BgB,IA8BhB8C,WAAY,GAEdC,YAAa,CACX/C,MAjCgB,KAmClBgD,aAAa,aACXlC,QAAS,OACTmC,WAAY,SACZxD,QAASL,EAAMG,QAAQ,EAAG,IACvBH,EAAM8D,OAAOC,QAJN,CAKVC,eAAgB,eAElBC,QAAS,CACPV,SAAU,EACVlD,QAASL,EAAMG,QAAQ,GACvBuC,WAAY1C,EAAM2C,YAAYC,OAAO,SAAU,CAC7CC,OAAQ7C,EAAM2C,YAAYE,OAAOC,MACjCC,SAAU/C,EAAM2C,YAAYI,SAASC,gBAEvCK,aAjDgB,KAmDlBa,aAAc,CACZxB,WAAY1C,EAAM2C,YAAYC,OAAO,SAAU,CAC7CC,OAAQ7C,EAAM2C,YAAYE,OAAOM,QACjCJ,SAAU/C,EAAM2C,YAAYI,SAASK,iBAEvCC,YAAa,OAIF,SAASc,IAAU,IAAD,EACzB7C,EAAUxB,IACVE,EAAQoE,cAFiB,EAGPC,IAAMC,UAAS,GAHR,mBAGxBC,EAHwB,KAGlBC,EAHkB,KAa/B,OACE,yBAAKzC,UAAWT,EAAQrB,MACtB,kBAACwE,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CACEzD,SAAS,QACTc,UAAW4C,YAAKrD,EAAQmB,QAAT,mBACZnB,EAAQ4B,YAAcqB,GADV,sBAEP,UAFO,KAKf,kBAACK,EAAA,EAAD,KACE,kBAAC9C,EAAA,EAAD,CAAYS,QAAQ,KAAKsC,QAAM,EAAC9C,UAAWT,EAAQgC,QAEnD,kBAACwB,EAAA,EAAD,CACEnE,MAAM,QACNI,WAAW,OACXgE,aAAW,cACXC,KAAK,MACL5C,QA1Be,WACvBoC,GAAQ,IA0BAzC,UAAW4C,YAAKJ,GAAQjD,EAAQkC,OAEhC,kBAAC,IAAD,SAIN,0BACEzB,UAAW4C,YAAKrD,EAAQ2C,QAAT,eACZ3C,EAAQ4C,aAAeK,KAG1B,yBAAKxC,UAAWT,EAAQsC,gBAE1B,kBAACqB,EAAA,EAAD,CACElD,UAAWT,EAAQmC,OACnBlB,QAAQ,aACR2C,OAAO,QACPX,KAAMA,EACNjD,QAAS,CACP6D,MAAO7D,EAAQqC,cAGjB,yBAAK5B,UAAWT,EAAQsC,cACtB,kBAACkB,EAAA,EAAD,CAAY1C,QA9CM,WACxBoC,GAAQ,KA8CqB,QAApBxE,EAAMoF,UAAsB,kBAAC,IAAD,MAAsB,kBAAC,IAAD,QAGvD,kBAACC,EAAA,EAAD,MAEA,kBAACjE,EAAD,CAAQK,UAAU,M,UCtIb6D,EAAmBvF,aAAW,SAAAC,GAAK,YAAK,CACjDC,KAAM,CACFsD,SAAU,GAEdgC,IAAI,aACAlF,QAASL,EAAMG,QAAQ,GACvBwB,UAAW,QACXhB,MAAOX,EAAMwF,QAAQC,KAAKC,UAC1BzC,OAAQ,OACPjD,EAAMM,YAAYC,KAAK,MAAQ,CAC5B0C,OAAQ,QAGhB0C,OAAO,aACH1C,OAAQ,QACPjD,EAAMM,YAAYC,KAAK,MAAQ,CAC5B0C,OAAQ,SAGhB2C,OAAO,aACH3C,OAAQ,SACPjD,EAAMM,YAAYC,KAAK,MAAQ,CAC5B0C,OAAQ,SAGhB4C,cAAY,GACRjF,MAAM,MACNJ,OAAO,OACPH,QAAQL,EAAMG,QAAQ,GACtByB,WAAW,OAJH,cAKP5B,EAAMM,YAAYa,QAAQ,KAAK,MAAQ,CACpCS,WAAW,OACXvB,QAAQ,EACRO,MAAM,SARF,cAUPZ,EAAMM,YAAYC,KAAK,MAAQ,CAC5BF,QAAQ,IAXJ,GAeZyF,aAAa,aACTlE,WAAW,OACXhB,MAAM,MACNJ,OAAO,QACNR,EAAMM,YAAYC,KAAK,MAAQ,CAC5BqB,WAAW,OACXhB,MAAM,MACNe,UAAU,e,iBC3ChB7B,EAAYwF,EAEH,SAASS,IACpB,IAAMzE,EAAUxB,IAEhB,OACI,yBAAKiC,UAAWT,EAAQrB,MACpB,kBAAC+F,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAS,GACrB,kBAAC6F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,yBAAKrE,UAAWT,EAAQqE,OAAQzD,MAAO,CAAExB,gBAAiB,KACtD,uBAAGqB,UAAWT,EAAQwE,cAClB,wBAAI5D,MAAO,CAACmE,SAAS,UAArB,wBACA,uBAAGnE,MAAO,CAACtB,MAAM,OAAOyF,SAAS,WAAjC,8IAIZ,kBAACL,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB,yBAAKrE,UAAWT,EAAQqE,OAAQzD,MAAO,CAAExB,gBAAiB,KACtD,yBAAKqB,UAAWT,EAAQuE,aAAcS,IAAKC,UCtBpD,SAASC,IACpB,OACI,+CCOR,IAAM1G,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCuF,IAAI,aACFlF,QAASL,EAAMG,QAAQ,GACvBwB,UAAW,QACXhB,MAAOX,EAAMwF,QAAQC,KAAKC,UAC1BzC,OAAQ,OACPjD,EAAMM,YAAYC,KAAK,MAAQ,CAC9B0C,OAAQ,YAgCd,SAASwD,IAAuB,IAAD,EACsBC,OACnD,MAAO,CACL9F,MAH2B,EACrB+F,WAGN1D,OAJ2B,EACF2D,aAOdC,MAnCf,WAEE,IAAMvF,EAAUxB,IAFH,EAImCwE,mBAASmC,KAJ5C,mBAINK,EAJM,KAIYC,EAJZ,KAcb,OARAC,qBAAU,WACR,SAASC,IACPF,EAAoBN,KAGtB,OADAC,OAAOQ,iBAAiB,SAAUD,GAC3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAGD,kBAAC,IAAD,KACE,kBAACjB,EAAA,EAAD,CAAMC,WAAS,EAAC9F,QAAS,GACvB,kBAAC6F,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACXW,EAAiBlG,MAAQ,IAAO,kBAACwG,EAAA,EAAD,CAAOrF,UAAWT,EAAQiE,KAAK,kBAACnE,EAAD,OAAqB,kBAACgG,EAAA,EAAD,CAAOrF,UAAWT,EAAQiE,KAAK,kBAACpB,EAAD,SAGzH,kBAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,IAAIjF,UAAW0D,IACjC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,UAAUjF,UAAWmE,MCjCzBe,QACW,cAA7Bb,OAAOc,SAASC,UAEe,UAA7Bf,OAAOc,SAASC,UAEhBf,OAAOc,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.581bdc4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task-icons.4a256973.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom'\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft: theme.spacing(2),\r\n    paddingRight: '10%',\r\n    padding: '2vh',\r\n    //Contunie here, its not good for hambuger button\r\n    //   \"&:nth-child(1)\": {\r\n    //     marginLeft:'20%'\r\n    //  },\r\n    [theme.breakpoints.down('xs')]: {\r\n      margin: 'auto',\r\n      padding: '2vh',\r\n    }\r\n  },\r\n  buttonStyle: {\r\n    marginLeft: theme.spacing(2),\r\n    backgroundColor: '#F76C6C',\r\n    color: 'white',\r\n    //Media Query for mobile version\r\n    [theme.breakpoints.down('xs')]: {\r\n      width: '100%',\r\n      marginTop: theme.spacing(2),\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  linkStyle: {\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n    fontFamily: 'sans-serif',\r\n    position: 'relative',\r\n    left: '5vw',\r\n    [theme.breakpoints.between('sm', 'md')]: {\r\n      marginLeft: theme.spacing(1),\r\n      position: 'relative',\r\n      left: '5vw'\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n\r\n      position: 'relative',\r\n      left: '1vw'\r\n    },\r\n\r\n  }\r\n\r\n}));\r\nNavBar.defaultProps = {\r\n  isHamNav: false,\r\n}\r\nexport default function NavBar(props) {\r\n  const classes = useStyles();\r\n\r\n  const preventDefault = event => event.preventDefault();\r\n\r\n  const linkStyle = (props.isHamNav) ?\r\n    {\r\n      display: 'block',\r\n      textAlign: 'center',\r\n      paddingTop: '20%',\r\n      margin: 'auto',\r\n      // boxShadow: '0px 2px #888888',\r\n    } : {\r\n      paddingRight: '5%',\r\n      float: 'left',\r\n\r\n    };\r\n\r\n  return (\r\n    <div>\r\n      <Typography className={classes.root} >\r\n        <Box className={classes.linkStyle}>\r\n          <Link to=\"/\" style={linkStyle} className={classes.linkStyle}>\r\n            Home\r\n      </Link>\r\n          <Link href=\"#\" onClick={preventDefault} style={linkStyle} className={classes.linkStyle}>\r\n            Pricing\r\n      </Link>\r\n          <Link href=\"#\" onClick={preventDefault} style={linkStyle} className={classes.linkStyle}>\r\n            Contact Us\r\n      </Link>\r\n        </Box>\r\n        <Box component=\"span\" >\r\n\r\n          <Link to=\"/signup\">\r\n            <Button variant=\"contained\" className={classes.buttonStyle} style={{ backgroundColor: '#000000' }}>Signup</Button>\r\n          </Link>\r\n\r\n          <Button variant=\"contained\" className={classes.buttonStyle}>\r\n            Try for free\r\n      </Button>\r\n        </Box>\r\n      </Typography>\r\n    </div>  \r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport NavBar from './NavBar';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    height: '7vh',\r\n    backgroundColor:'#A8D0E6'\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: drawerWidth,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-start',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginRight: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginRight: 0,\r\n  },\r\n}));\r\n\r\nexport default function HamNav() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n          color:'purple'\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap className={classes.title}>\r\n          </Typography>\r\n          <IconButton\r\n            color=\"black\"\r\n            fontWeight=\"bold\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"end\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n      </main>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <NavBar isHamNav={true} />\r\n\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const landingPageStyle = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    nav: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'right',\r\n        color: theme.palette.text.secondary,\r\n        height: '8vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '6vh',\r\n        }\r\n    },\r\n    promo1: {\r\n        height: '92vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '60vh',\r\n        }\r\n    },\r\n    promo2: {\r\n        height: '100vh',\r\n        [theme.breakpoints.down('xs')]: {\r\n            height: '50vh',\r\n        }\r\n    },\r\n    landingPhoto:{\r\n        width:'80%',\r\n        margin:'auto',\r\n        padding:theme.spacing(7),\r\n        paddingTop:'6vh',\r\n        [theme.breakpoints.between('xs','sm')]: {\r\n            paddingTop:'15vh',\r\n            padding:0,\r\n            width:'100%'\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            padding:0\r\n        }\r\n\r\n    },\r\n    landingMotto:{\r\n        paddingTop:'20vh',\r\n        width:'50%',\r\n        margin:'auto',\r\n        [theme.breakpoints.down('xs')]: {\r\n            paddingTop:'10vh',\r\n            width:'80%',\r\n            textAlign:'center'\r\n        }\r\n\r\n\r\n    }\r\n}));\r\n","import React, { useState, useEffect } from 'react';\r\nimport './LandingPage.css';\r\nimport {landingPageStyle} from'./LandingPageStyle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport landingLogo from '../images/task-icons.svg'\r\n\r\nconst useStyles = landingPageStyle;\r\n\r\nexport default function LandingPage() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\r\n                        <p className={classes.landingMotto}>\r\n                            <h1 style={{fontSize:'2.2em'}}>Suspendisse potenti.</h1>\r\n                            <p style={{width:'100%',fontSize:'1.25em'}}>Vivamus lorem urna, viverra non pharetra ac, rhoncus a tortor. Nulla vestibulum ligula tortor, mattis tincidunt diam ultrices sit amet.</p>\r\n                        </p>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\r\n                        <img className={classes.landingPhoto} src={landingLogo} ></img>\r\n                        \r\n                    </div>\r\n                </Grid>\r\n                {/* <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo2} style={{ backgroundColor: 'red' }}>Text2</div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <div className={classes.promo2} style={{ backgroundColor: 'Yellow' }}>Image2</div>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Signup () {\r\n    return(\r\n        <div>\r\n            Create account\r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NavBar from './landing/components/NavBar';\r\nimport HamNav from './landing/components/HamNav';\r\nimport LandingPage from './landing/LandingPage';\r\nimport Signup from './signup/Signup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  nav: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'right',\r\n    color: theme.palette.text.secondary,\r\n    height: '8vh',\r\n    [theme.breakpoints.down('xs')]: {\r\n      height: '6vh',\r\n    }\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles();\r\n\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12} >\r\n          {(windowDimensions.width > 600) ? <Paper className={classes.nav}><NavBar /></Paper> : <Paper className={classes.nav}><HamNav /></Paper>}\r\n        </Grid>\r\n      </Grid>\r\n      <Route exact path=\"/\" component={LandingPage} />\r\n      <Route exact path=\"/signup\" component={Signup} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}