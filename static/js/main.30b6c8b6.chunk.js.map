{"version":3,"sources":["images/task-icons.svg","landing/components/NavBar.js","landing/components/HamNav.js","landing/LandingPageStyle.js","landing/LandingPage.js","signup/SignupStyle.js","signup/components/formItem.js","signup/Signup.js","dashboard/kanban/initialData.js","dashboard/kanban/Task.js","dashboard/kanban/Column.js","dashboard/Modal/Modal.js","dashboard/TaskForm/TaskForm.js","dashboard/TaskForm/EditTaskForm.js","dashboard/kanban/Kanban.js","dashboard/TeamChat/userData.js","dashboard/TeamChat/InputControl.js","dashboard/TeamChat/Chat.js","dashboard/Announcement.js","dashboard/Sample.js","dashboard/TeamList/TeamList.js","dashboard/Dashboard.js","login/LoginStyle.js","login/components/formItem.js","login/Login.js","App.js","serviceWorker.js","index.js","images/signupImage.svg","config.js"],"names":["module","exports","useStyles","makeStyles","theme","root","marginLeft","spacing","paddingRight","breakpoints","down","margin","padding","buttonStyle","backgroundColor","color","fontSize","marginTop","width","borderColor","boxShadow","linkStyle","fontWeight","textDecoration","fontFamily","position","left","between","NavBar","props","classes","preventDefault","event","isHamNav","display","textAlign","paddingTop","float","Typography","className","Box","to","style","href","onClick","component","Button","variant","defaultProps","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","height","appBarShift","easeOut","enteringScreen","marginRight","title","flexGrow","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","justifyContent","content","contentShift","HamNav","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","clsx","Toolbar","noWrap","IconButton","aria-label","edge","Drawer","anchor","paper","direction","Divider","landingPageStyle","nav","palette","text","secondary","promo1","promo2","landingPhoto","landingMotto","LandingPage","Grid","container","item","xs","sm","src","landingLogo","signupPageStyle","formStyle","signupImage","signUpButton","loginButton","FormItem","TextField","type","name","label","value","onChange","Signup","mail","lastname","password","copassword","user","setUser","handleChange","target","RegExp","test","console","log","prevState","signupLogo","onSubmit","data","fetch","method","mode","headers","body","JSON","stringify","then","response","status","Error","json","catch","err","document","getElementById","onclick","alert","handleSubmit","paddingLeft","noValidate","autoComplete","id","initialData","tasks","assignedTo","columns","taskIds","columnOrder","avatar","getContrastText","deepOrange","Task","draggableId","task","index","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","handleEditTask","columnId","Avatar","Column","column","handleAddNewTask","cursor","droppableId","droppableProps","map","key","placeholder","modal","background","border","shadows","KanbanModal","Modal","aria-labelledby","aria-describedby","modalStateOpen","onClose","handleModalClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","children","TaskForm","taskName","setTaskName","handleAddNewTaskSubmit","EditTaskForm","taskDetails","editTaskDetails","editAssignedTo","setTask","handleEditTaskSubmit","editTaskId","handleEditNewTaskDelete","Kanban","setData","setmodalStateOpen","currentColumnId","setCurrentColumnId","isItNewTask","setIsItNewTask","setEditAssignedTo","setEditTaskDetails","setEditTaskId","editColumnId","setEditColumnId","asssignedTo","taskId","onDragEnd","result","destination","source","newTaskIds","Array","from","splice","newColumn","sourceColumn","newSourceTaskIds","destinationColumn","newDestinationTaskIds","newSourceColumn","newDestinationColumn","onDragStart","colId","val","length","allTasks","numbOfTasks","Object","keys","newTaskId","split","newTask","currentColumnTaskIds","updatedColumn","_taskId","toUpperCase","indexToDelete","indexOf","userData","useInput","setValue","orange","purple","deepPurple","chatAvatar","overflow","Log","List","maxHeight","ListItem","messages","Message","uuid","date","messageIndividual","ListItemText","Chip","App","defaultChannel","params","window","location","search","substring","i","pair","decodeURI","channel","setChannel","setMessages","UserData","users","displayname","Math","floor","random","join","username","tempChannel","tempMessage","publishMessage","messageObject","PubNub","publishKey","subscribeKey","publish","message","goBack","query","useEffect","pubnub","ApiConfig","PUBLISHKEY","SUBSCRIBEKEY","addListener","statusEvent","category","msg","unixTimestamp","timetoken","localeDateTime","Date","toLocaleString","newMessages","push","concat","subscribe","channels","history","count","stringifiedTimeToken","entry","unsubscribeAll","addEventListener","removeEventListener","Card","CardContent","inline","CardActions","Input","fullWidth","onKeyDown","newChannel","trim","newURL","origin","pushState","inputProps","autoFocus","size","Announcement","TeamList","gridTeam","borderRadius","gridKanban","gridChat","gridAnnouncement","Dashboard","loginPageStyle","Login","on","getWindowDimensions","innerWidth","innerHeight","windowDimensions","setWindowDimensions","handleResize","Paper","exact","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30b6c8b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/task-icons.4a256973.svg\";","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom'\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginLeft: theme.spacing(2),\n    paddingRight: '10%',\n    //Contunie here, its not good for hambuger button\n    //   \"&:nth-child(1)\": {\n    //     marginLeft:'20%'\n    //  },\n    [theme.breakpoints.down('xs')]: {\n      margin: 'auto',\n      padding: '2vh',\n    }\n  },\n  buttonStyle: {\n    marginLeft: theme.spacing(2),\n    backgroundColor: '#F76C6C',\n    color: 'white',\n    fontSize: '0.5',\n    marginTop: -5,\n    //Media Query for mobile version\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      marginTop: theme.spacing(2),\n      marginLeft: 0\n    },\n    '&:hover': {\n      backgroundColor: '#dc5a5a',\n      borderColor: '#dc5a5a',\n      boxShadow: 'none',\n    }\n  },\n  linkStyle: {\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: '1em',\n    textDecoration: 'none',\n    fontFamily: 'sans-serif',\n    position: 'relative',\n    left: '5vw',\n    [theme.breakpoints.between('sm', 'md')]: {\n      marginLeft: theme.spacing(1),\n      position: 'relative',\n      left: '5vw'\n    },\n    [theme.breakpoints.down('sm')]: {\n\n      position: 'relative',\n      left: '1vw'\n    },\n\n  }\n\n}));\nNavBar.defaultProps = {\n  isHamNav: false,\n}\nexport default function NavBar(props) {\n  const classes = useStyles();\n\n  const preventDefault = event => event.preventDefault();\n\n  const linkStyle = (props.isHamNav) ?\n    {\n      display: 'block',\n      textAlign: 'center',\n      paddingTop: '20%',\n      margin: 'auto',\n      // boxShadow: '0px 2px #888888',\n    } : {\n      paddingRight: '5%',\n      float: 'left',\n\n    };\n\n  return (\n    <div>\n      <Typography className={classes.root} >\n        <Box className={classes.linkStyle}>\n          <Link to=\"/\" style={linkStyle} className={classes.linkStyle}>\n            Home\n      </Link>\n          <Link href=\"#\" onClick={preventDefault} style={linkStyle} className={classes.linkStyle}>\n            Pricing\n      </Link>\n      <Link href=\"#\" onClick={preventDefault} style={linkStyle} className={classes.linkStyle}>\n            Team\n      </Link>\n      <Link href=\"#\" onClick={preventDefault} style={linkStyle} className={classes.linkStyle}>\n            Contact Us\n      </Link>\n        </Box>\n        <Box component=\"span\" >\n\n          <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n            <Button variant=\"contained\" className={classes.buttonStyle} style={{ backgroundColor: '#000000' }}>Signup</Button>\n          </Link>\n\n          <Link to=\"/dashboard\" style={{ textDecoration: \"none\" }}>\n            <Button variant=\"contained\" className={classes.buttonStyle}>\n              Dashboard\n            </Button>\n          </Link>\n        </Box>\n      </Typography>\n    </div>\n  );\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport NavBar from './NavBar';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    height: '56px',\n    backgroundColor:'#A8D0E6'\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: drawerWidth,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginRight: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginRight: 0,\n  },\n}));\n\nexport default function HamNav() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n          color:'purple'\n        })}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap className={classes.title}>\n          </Typography>\n          <IconButton\n            color=\"black\"\n            fontWeight=\"bold\"\n            aria-label=\"open drawer\"\n            edge=\"end\"\n            onClick={handleDrawerOpen}\n            className={clsx(open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === 'rtl' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n\n        <NavBar isHamNav={true} />\n\n      </Drawer>\n    </div>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const landingPageStyle = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    nav: {\n        padding: theme.spacing(2),\n        textAlign: 'right',\n        color: theme.palette.text.secondary,\n        height: '8vh',\n        [theme.breakpoints.down('xs')]: {\n            height: '6vh',\n        }\n    },\n    promo1: {\n        height: '96vh',\n        [theme.breakpoints.down('xs')]: {\n            height: '60vh',\n        }\n    },\n    promo2: {\n        height: '100vh',\n        [theme.breakpoints.down('xs')]: {\n            height: '50vh',\n        }\n    },\n    landingPhoto:{\n        width:'80%',\n        margin:'auto',\n        padding:theme.spacing(7),\n        paddingTop:'6vh',\n        [theme.breakpoints.between('xs','sm')]: {\n            paddingTop:'15vh',\n            padding:0,\n            width:'100%'\n        },\n        [theme.breakpoints.down('xs')]: {\n            padding:0\n        }\n\n    },\n    landingMotto:{\n        paddingTop:'20vh',\n        width:'50%',\n        margin:'auto',\n        [theme.breakpoints.down('xs')]: {\n            paddingTop:'10vh',\n            width:'80%',\n            textAlign:'center'\n        }\n\n\n    }\n}));\n","import React, { useState, useEffect } from 'react';\nimport './LandingPage.css';\nimport {landingPageStyle} from'./LandingPageStyle';\nimport Grid from '@material-ui/core/Grid';\nimport landingLogo from '../images/task-icons.svg'\n\nconst useStyles = landingPageStyle;\n\nexport default function LandingPage() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={0}>\n                <Grid item xs={12} sm={6}>\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\n                        <p className={classes.landingMotto}>\n                            <h1 style={{fontSize:'2.2em'}}>Suspendisse potenti.</h1>\n                            <p style={{width:'100%',fontSize:'1.25em'}}>Vivamus lorem urna, viverra non pharetra ac, rhoncus a tortor. Nulla vestibulum ligula tortor, mattis tincidunt diam ultrices sit amet.</p>\n                        </p>\n                    </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <div className={classes.promo1} style={{ backgroundColor: '' }}>\n                        <img className={classes.landingPhoto} src={landingLogo} ></img>\n                        \n                    </div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <div className={classes.promo2} style={{ backgroundColor: 'red' }}>Text2</div>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <div className={classes.promo2} style={{ backgroundColor: 'Yellow' }}>Image2</div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const signupPageStyle = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        \n    },\n    formStyle:{\n        display: 'block',\n        textAlign: 'right',\n        color: theme.palette.text.secondary,\n        width: '100%',\n    },\n    signupImage:{\n        width:'70%',\n        margin:'auto',\n        padding:'5vw',\n        paddingTop:'6vh',\n        [theme.breakpoints.between('xs','sm')]: {\n            paddingTop:'15vh',\n            padding:0,\n            width:'100%'\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n            padding:0\n        }\n    },\n    signUpButton:{\n        backgroundColor: '#F76C6C',\n        width:'45%',\n        height: '50px',\n        display: 'inline',\n        marginLeft:'auto',\n        marginRight:'1vw',\n        marginTop:'3vh',\n        '&:hover': {\n            backgroundColor: '#dc5a5a',\n            borderColor: '#dc5a5a',\n            boxShadow: 'none',\n          },\n          '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#F76C6C',\n            borderColor: '#F76C6C',\n          },\n    },\n    loginButton:{\n        backgroundColor: '#A8D0E6',\n        width:'45%',\n        height: '50px',\n        display: 'inline',\n        marginLeft:'auto',\n        marginRight:'1vw',\n        marginTop:'3vh',\n        '&:hover': {\n            backgroundColor: '#86b8d4',\n            borderColor: '#86b8d4',\n            boxShadow: 'none',\n          },\n          '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#A8D0E6',\n            borderColor: '#A8D0E6',\n          },\n    },\n    linkStyle: {\n        fontWeight: 'bold',\n        color: 'black',\n        fontSize: '1.1em',\n        textDecoration: 'none',\n        fontFamily: 'sans-serif',\n        position: 'relative',\n        left: '5vw',\n        [theme.breakpoints.between('sm', 'md')]: {\n          marginLeft: theme.spacing(1),\n          position: 'relative',\n          left: '5vw'\n        },\n        [theme.breakpoints.down('sm')]: {\n    \n          position: 'relative',\n          left: '1vw'\n        },\n    \n      }\n   \n}));\n","import React, { useState, useEffect } from 'react';\nimport {signupPageStyle} from '../SignupStyle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = signupPageStyle\n\nexport default function FormItem (props){\n    const classes = useStyles();\n    const formItem = {\n        width: '100%',\n        marginTop:'2.5vh',\n        color:'secondary',\n        marginLeft: 'auto',\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#F76C6C',\n            borderColor: '#F76C6C',\n          },\n    }\n    return(\n        <Grid item xs={12}>\n                <TextField color=\"secondary\" type={props.type}style={formItem} name={props.name} label={props.label} value={props.value} onChange={props.onChange} variant=\"outlined\" />\n        </Grid>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { signupPageStyle } from './SignupStyle';\nimport { palette } from '@material-ui/system';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormItem from './components/formItem'\nimport signupLogo from '../images/signupImage.svg'\n\n\nconst useStyles = signupPageStyle\n\nexport default function Signup() {\n\n    const [user, setUser] = useState({\n        mail: \"\",\n        name: \"\",\n        lastname: \"\",\n        password: \"\",\n        copassword: \"\"\n    });\n\n    const classes = useStyles();\n    const frmStyle = {\n        height: '75vh',\n        paddingLeft: '7vw',\n        paddingRight: '7vw',\n        paddingTop: '5vh',\n        // boxShadow: 'rgb(216, 215, 215) 1px 2px 10px 2px',\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        var data = {\n            mail: user.mail,\n            name: user.name,\n            lastname: user.lastname,\n            password: user.password,\n            copassword: user.copassword,\n        }\n        console.log(data);\n        fetch(\"http://localhost:3003/user_create\", {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        }).then(function (response) {\n            if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function (data) {\n            console.log(data);\n            if (data == \"success\") {\n\n            }\n        }).catch(function (err) {\n            console.log(err)\n        });\n\n        //Redirect to dashboardPaqe\n        let signUpButton = document.getElementById(\"submitButton\");\n        signUpButton.onclick(alert(\"Hello World\"))\n        console.log(signUpButton);\n    }\n    function handleChange(event) {\n        const { name, value } = event.target\n\n        //In progress\n        if(name === 'mail'){\n            const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n             if(!validEmailRegex.test(value)){\n                // console.log(FormItem().formIte)\n                console.log('This is not email Adress');\n             }\n        }\n        setUser(prevState => {\n            // console.log(prevState)\n            return {\n                ...prevState,\n                [name]: value\n            }    \n        });\n    }\n\n    return (\n        <div className={classes.formStyle}>\n            <Grid container>\n                <Grid item xs={12} sm={6}>\n                    <img className={classes.signupImage} src={signupLogo}></img>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <form onSubmit={(event) => handleSubmit(event)} style={frmStyle} noValidate autoComplete=\"off\">\n                        <h1 style={{ textAlign: 'center', fontSize: '2.1em', marginTop: '0', color: 'black' }}>Create Account</h1>\n                        <FormItem style={{ marginTop: '1vh' }} label=\"Email\" name='mail' value={user.mail} onChange={(event) => handleChange(event)} />\n                        <FormItem label=\"First Name\" name='name' value={user.name} onChange={(event) => handleChange(event)} />\n                        <FormItem label=\"Last Name\" name='lastname' value={user.lastname} onChange={(event) => handleChange(event)} />\n                        <FormItem type='password' label=\"Password\" name='password' value={user.password} onChange={(event) => handleChange(event)} />\n                        <FormItem type='password' label=\"Confirm Password\" name='copassword' value={user.copassword} onChange={(event) => handleChange(event)} />\n                        <Button id=\"submitButton\" type=\"submit\" className={classes.signUpButton} variant=\"contained\" color=\"primary\"> SIGN UP </Button>\n                        <Button id=\"loginButton\" className={classes.loginButton} variant=\"contained\" color=\"primary\"> LOGIN </Button>\n                    </form>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}","const initialData = {\n    tasks:{\n        'task-1': {id: 'task-1', content: 'Garbage', assignedTo: 'AU'},\n        'task-2': {id: 'task-2', content: 'Cook dinner', assignedTo: 'YT'},\n        'task-3': {id: 'task-3', content: 'Watch movie', assignedTo: 'BS'},\n        'task-4': {id: 'task-4', content: 'Sleep', assignedTo: 'NA'},\n        'task-5': {id: 'task-5', content: 'Groceries', assignedTo: 'HT'},\n        'task-6': {id: 'task-6', content: 'Laundary', assignedTo: 'AU'},\n        'task-7': {id: 'task-7', content: 'Party', assignedTo: 'YT'},\n        'task-8': {id: 'task-8', content: 'Others', assignedTo: 'YT'},\n        'task-9': {id: 'task-9', content: 'well', assignedTo: 'AL'},\n        'task-10': {id: 'task-10', content: 'this', assignedTo: 'MA'},\n        'task-11': {id: 'task-11', content: 'is', assignedTo: 'YT'},\n        'task-12': {id: 'task-12', content: 'great', assignedTo: 'AU'},\n    }, \n    columns: {\n        'column-1': {\n            id: 'column-1',\n            title: 'All tasks',\n            taskIds : ['task-1', 'task-2', 'task-3', 'task-4',]\n        },\n        'column-2': {\n            id: 'column-2',\n            title: 'My tasks',\n            taskIds : ['task-5', 'task-6', 'task-7', 'task-8'],\n        },\n        'column-3': {\n            id: 'column-3',\n            title: 'Archive',\n            taskIds : ['task-9', 'task-10', 'task-11', 'task-12'],\n        }\n    },\n    columnOrder: ['column-1', 'column-2', 'column-3']\n};\n\nexport default initialData;","import React from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport './task.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    avatar: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: '#F76C6C',\n        width: theme.spacing(4),\n        height: theme.spacing(4),\n        marginLeft: 5,\n    },\n}));\n\nexport default function Task(props) {\n\n    const whileDragging = {\n        backgroundColor: props => true ? \"green\" : \"red\"\n    }\n    const style = {\n        backgroundColor: 'blue',\n        fontSize: 18,\n        // ...provided.draggableProps.style,\n    };\n    const classes = useStyles();\n\n    return (\n        <Draggable draggableId={props.task.id} index={props.index}>\n            {\n\n                (provided, snapshot) => (\n                    <div>\n                        <div className=\"item\"\n                            {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}\n                            onClick={()=>{props.handleEditTask(props.task.assignedTo,\n                                props.task.content, props.task.id, props.columnId)}}\n                        >\n                            <Avatar className={classes.avatar}>{props.task.assignedTo}</Avatar>\n                            {/* <Avatar className={classes.avatar} \n                            style={{backgroundColor:'purple'}}>A</Avatar> */}\n                            <span>{props.task.content}</span>\n                            <IconButton aria-label=\"More info\" color=\"secondary\">\n                                <MoreHorizIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )\n            }\n        </Draggable>\n    );\n}","import React from 'react';\nimport './column.css';\nimport Task from './Task';\nimport { Droppable } from \"react-beautiful-dnd\";\nimport IconButton from '@material-ui/core/IconButton';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nexport default function Column(props) {\n\n    return (\n        <div>\n            <div className=\"colDiv\">\n                <p className=\"colTitle\"> \n                    {props.column.title}\n                    {props.column.title!=='Archive'\n                    ?<span onClick={props.handleAddNewTask} style={{cursor:\"pointer\"}}>\n                        <IconButton aria-label=\"Add\"  style={{padding:0, position:\"absolute\", marginLeft:5}}>\n                            <AddCircleIcon/>\n                        </IconButton>\n                    </span>\n                    :<span></span>}</p> \n\n                <Droppable droppableId={props.column.id} direction=\"vertical\">\n                    {\n                        (provided, snapshot) => (\n                            <div className=\"taskList\" ref={provided.innerRef}\n                            {...provided.droppableProps}>\n                                {props.tasks.map((task,index) => <Task \n                                key={task.id} task={task} \n                                handleEditTask = {props.handleEditTask}\n                                index={index}\n                                columnId={props.column.id}/>)}\n                            {provided.placeholder}\n                            </div>\n                        )\n                    }\n                </Droppable>\n            </div>\n        </div>\n    );\n}","import React from 'react';\n\n//Modal Styles\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nexport default function KanbanModal(props) {\n    const classes =  useStyles();\n    return (\n        <div>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={props.modalStateOpen}\n                onClose={props.handleModalClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={props.modalStateOpen}>\n                    <div className={classes.paper}>\n                        {props.children}\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n\n\n    );\n}","import React, { useState } from 'react';\n\nexport default function TaskForm(props) {\n\n    const [taskName, setTaskName] = useState(\"\");\n\n    let handleChange = (event) => {\n        setTaskName(event.target.value);\n    }\n\n    return (\n        <form onSubmit={(event)=>{\n            props.handleAddNewTaskSubmit(taskName, event)\n            }}>\n            <label>\n                Name:\n                <input type=\"text\" value={taskName} onChange={handleChange} />\n            </label>\n            <input type=\"submit\" value=\"Submit\" />\n        </form>\n    );\n}","import React, { useState } from 'react';\n\nexport default function EditTaskForm(props) {\n\n    const [task, setTask] = useState({\n        taskDetails:props.editTaskDetails,\n        assignedTo:props.editAssignedTo,\n    });\n\n    let handleChange = (event) => {\n        const { name, value } = event.target\n        setTask(prevState=>{\n            return{\n                ...prevState,\n                [name]: value,\n            }\n        })\n    }\n\n    return (\n        <div>\n            <form onSubmit={(event)=>{\n                props.handleEditTaskSubmit(task, event, props.editTaskId)\n                }}>\n                <label>\n                    Task details:\n                    <input type=\"text\" value={task.taskDetails} name=\"taskDetails\" onChange={handleChange} />\n                </label>\n                <br/>\n                <label>\n                    Assigned to:\n                    <input type=\"text\" value={task.assignedTo} name=\"assignedTo\" onChange={handleChange} />\n                </label>\n                <br/><br/>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n            <br/>\n            <input type=\"button\" value=\"Delete\" \n                onClick={()=>{props.handleEditNewTaskDelete(props.editTaskId)}}/>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport initialData from './initialData';\nimport Column from './Column';\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport KanbanModal from '../Modal/Modal';\nimport TaskForm from '../TaskForm/TaskForm';\nimport EditTaskForm from '../TaskForm/EditTaskForm';\n\nexport default function Kanban() {\n    const [data, setData] = useState(initialData);\n\n    let onDragEnd = (result) => {\n        console.log(result);\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        //Task dropped at the same position\n        if (destination.droppableId === source.droppableId &&\n            destination.index === source.index) {\n            return\n        }\n\n        if (source.droppableId === destination.droppableId) {\n            console.log(\"Moving in the same column\");\n            const column = data.columns[source.droppableId];\n            const newTaskIds = Array.from(column.taskIds);\n            newTaskIds.splice(source.index, 1);\n            newTaskIds.splice(destination.index, 0, draggableId);\n\n            const newColumn = {\n                ...column,\n                taskIds: newTaskIds,\n            }\n\n            setData(prevState => {\n                return {\n                    ...prevState,\n                    columns: {\n                        ...prevState.columns,\n                        [newColumn.id]: newColumn,\n                    }\n                }\n            }\n            );\n        } else if (destination !== null) {\n            console.log(\"Moving to new column\");\n            const sourceColumn = data.columns[source.droppableId];\n            const newSourceTaskIds = sourceColumn.taskIds;\n            newSourceTaskIds.splice(source.index, 1);\n\n            const destinationColumn = data.columns[destination.droppableId];\n            const newDestinationTaskIds = destinationColumn.taskIds;\n            newDestinationTaskIds.splice(destination.index, 0, draggableId);\n\n            const newSourceColumn = {\n                ...sourceColumn,\n                taskIds: newSourceTaskIds\n            }\n\n            const newDestinationColumn = {\n                ...destinationColumn,\n                taskIds: newDestinationTaskIds\n            }\n            setData(prevState => {\n                return {\n                    ...prevState,\n                    columns: {\n                        ...prevState.columns,\n                        [newSourceColumn.id]: newSourceColumn,\n                        [newDestinationColumn.id]: newDestinationColumn,\n                    }\n\n                }\n            });\n        }\n        //document.body.style.color = \"black\";\n        //Call server to update here\n    }\n\n    let onDragStart = () => {\n        //document.body.style.color = \"red\";\n    }\n\n    // let handleAddNewTask = () => {\n    //     setOpen(true);\n    // }\n\n    /*************************************************************/\n    /*************************************************************/\n    // Modal Handle\n    const [modalStateOpen, setmodalStateOpen] = useState(false);\n\n    const handleModalClose = () => {\n        setmodalStateOpen(false);\n    }\n    /*************************************************************/\n    //Could have named the following states better:\n    const [currentColumnId, setCurrentColumnId] = useState(\"\");\n\n    const [isItNewTask, setIsItNewTask] = useState(true);\n\n    /*************************************************************/\n    /*************************************************************/\n    //Adding new task\n\n    let handleAddNewTask = (colId) => {\n        setIsItNewTask(true);\n        setmodalStateOpen(true);\n        setCurrentColumnId(colId);\n    }\n\n    let handleAddNewTaskSubmit = (val, event) => {\n        event.preventDefault();\n        if(val.length<1) {\n            setmodalStateOpen(false);\n            return;\n        }\n\n        const allTasks = data.tasks;\n\n        let numbOfTasks = Object.keys(allTasks).length;\n        const newTaskId = 'task-' + (++((Array.from(Object.keys(allTasks))[numbOfTasks-1]).split(\"-\")[1]));\n        const newTask = { id: newTaskId, content: val, assignedTo: 'AU' };\n        allTasks[newTaskId] = newTask; // update the state\n\n        //Updating the column\n        const currentColumnTaskIds = data.columns[currentColumnId].taskIds;\n        currentColumnTaskIds.splice(currentColumnTaskIds.length, 0, newTaskId);\n        console.log(currentColumnTaskIds);\n\n        //lets replace the whole column with new ids\n        let updatedColumn = {\n            ...data.columns[currentColumnId],\n            taskIds: currentColumnTaskIds\n        }\n\n        //Updating state\n        setData(prevState => {\n            return {\n                ...prevState,\n                tasks:allTasks,\n                columns: {\n                    ...prevState.columns,\n                    [currentColumnId]: updatedColumn,\n                }\n            }\n        }\n        );\n\n        setmodalStateOpen(false);\n    }\n    /*************************************************************/\n\n    /*************************************************************/\n    /*************************************************************/\n\n    const [editAssignedTo, setEditAssignedTo] = useState(\"\");\n    const [editTaskDetails, setEditTaskDetails] = useState(\"\");\n    const [editTaskId, setEditTaskId] = useState(\"\");\n    const [editColumnId, setEditColumnId] = useState(\"\");\n\n    //Edit Task Details\n    let handleEditTask = (asssignedTo, taskDetails, taskId, columnId) => {\n        setIsItNewTask(false);\n        setmodalStateOpen(true);\n        setEditAssignedTo(asssignedTo);\n        setEditTaskDetails(taskDetails);\n        setEditTaskId(taskId);\n        setEditColumnId(columnId);\n    }\n\n    //Editing task details\n    let handleEditTaskSubmit = (task, event, _taskId) => {\n        event.preventDefault();\n        \n        const allTasks = data.tasks;\n        allTasks[_taskId] = {id: _taskId, \n            content: task.taskDetails, \n            assignedTo: (task.assignedTo).split(\"\")[0].toUpperCase()}\n\n        setData(prevState=>{\n            return{\n                ...prevState,\n                tasks:allTasks,\n            }\n        });\n\n        setmodalStateOpen(false);\n    }\n\n    //Delete the card\n    let handleEditNewTaskDelete = (_taskId) => {\n        const allTasks = data.tasks;\n        delete allTasks[_taskId];\n\n        const currentColumnTaskIds =  data.columns[editColumnId].taskIds;\n        const indexToDelete =  currentColumnTaskIds.indexOf(_taskId);\n        currentColumnTaskIds.splice(indexToDelete, 1);\n\n        const newColumn = {\n            ...data.columns[editColumnId],\n            taskIds : currentColumnTaskIds\n        }\n\n        setData(prevState=>{\n            return{\n                ...prevState,\n                tasks:allTasks,\n                columns : {\n                    ...prevState.columns,\n                    [editColumnId]: newColumn,\n                }\n            }\n        });\n        setmodalStateOpen(false);\n    }\n\n    /*************************************************************/\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart}>\n                {data.columnOrder.map((columnId) => {\n                    let column = data.columns[columnId];\n                    let tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n\n                    return (\n                        <Column key={column.id} column={column} tasks={tasks}\n                            handleAddNewTask={() => { handleAddNewTask(column.id) }} \n                            handleEditTask={handleEditTask}/>\n                    )\n                })}\n            </DragDropContext>\n            <KanbanModal modalStateOpen={modalStateOpen} handleModalClose={handleModalClose}>\n                {isItNewTask?<TaskForm handleAddNewTaskSubmit={handleAddNewTaskSubmit} />\n                :<EditTaskForm \n                    editAssignedTo = {editAssignedTo}\n                    editTaskDetails = {editTaskDetails}\n                    editTaskId = {editTaskId}\n                    handleEditTaskSubmit={handleEditTaskSubmit}\n                    handleEditNewTaskDelete={handleEditNewTaskDelete}\n                />}\n            </KanbanModal>\n        </div>\n    );\n}","const userData = {\n    \"users\": [\n        {\n          \"userId\": \"1\",\n          \"displayname\": \"Fred\"\n        },\n        {\n          \"userId\": \"2\",\n          \"displayname\": \"Ben\"\n        },\n        {\n          \"userId\": \"3\",\n          \"displayname\": \"Sarah\"\n        }\n      ]\n};\n\nexport default userData;","import { useState } from 'react';\n\nfunction useInput()\n{\n  let [value, setValue] = useState('');\n  let onChange = function(event){\n    setValue(event.target.value);\n  };\n  return {\n    value,\n    setValue,\n    onChange\n  };\n}\n\nexport default useInput;\n","import React, { useState, useEffect} from 'react';\nimport './Chat.css';\nimport UserData from \"./userData\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport useInput from './InputControl';\nimport PubNub from 'pubnub';\nimport ApiConfig from '../../config'\nimport {Card,Chip, Divider, CardActions, CardContent,List, ListItem,Button,Typography,Input} from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[100]),\n    backgroundColor: deepPurple[500],\n\n  },\n  chatAvatar: {\n    height: '7vh',\n    overflow:'auto'\n  }\n}));\n\n// Our main Component, the parent to all the others, the one to rule them all.\nfunction App(){\n  const classes = useStyles();\n  //Set a default channel incase someone navigates to the base url without\n  //specificfying a channel name parameter.\n  let defaultChannel = \"Global\";\n  //Access the parameters provided in the URL\n  let query = window.location.search.substring(1);\n  let params = query.split(\"&\");\n  for(let i = 0; i < params.length;i++){\n    var pair = params[i].split(\"=\");\n    //If the user input a channel then the default channel is now set\n    //If not, we still navigate to the default channel.\n    if(pair[0] === \"channel\" && pair[1] !== \"\"){\n      defaultChannel = decodeURI(pair[1]);\n    }\n  }\n\n \n  const [channel,setChannel] = useState(defaultChannel);\n  const [messages,setMessages] = useState([]);\n  const [username] = useState([UserData.users[0].displayname,Math.floor(Math.random() * 10)].join('-'));\n  // const [username] = useState(['user', new Date().getTime()].join('-'));\n  const tempChannel = useInput();\n  const tempMessage = useInput();\n  //This is where we set up PubNub and handle events that come through. Reruns on channel name update!\n  useEffect(()=>{\n    console.log(\"setting up pubnub\");\n    const pubnub = new PubNub({\n      publishKey: ApiConfig.PUBLISHKEY,\n      subscribeKey: ApiConfig.SUBSCRIBEKEY,\n      uuid: username\n    });\n\n\n    pubnub.addListener({\n     status: function(statusEvent) {\n       if (statusEvent.category === \"PNConnectedCategory\") {\n         console.log(\"Connected to PubNub!\")\n       }\n     },\n     message: (msg) => {\n       if(msg.message.text){\n        const unixTimestamp = msg.timetoken / 10000000;\n        const gmtDate = new Date(unixTimestamp * 1000);\n        const localeDateTime = gmtDate.toLocaleString();\n         console.log(msg.message.text+\"----\" + localeDateTime);\n         let newMessages = [];\n         newMessages.push({\n           uuid:msg.message.uuid,\n           text: msg.message.text,\n           date: localeDateTime\n         });\n         setMessages(messages=>messages.concat(newMessages))\n       }\n     }\n   });\n     //Subscribes to the channel in our state\n     pubnub.subscribe({\n         channels: [channel]\n     });\n     pubnub.history(\n     {\n         channel: channel,\n         count: 10, // 100 is the default\n         stringifiedTimeToken: true // false is the default\n     }, function (status, response){\n       \n        let newMessages = [];\n         for (let i  = 0; i < response.messages.length;i++){\n          const unixTimestamp = response.messages[i].timetoken / 10000000;\n          const gmtDate = new Date(unixTimestamp * 1000);\n          const localeDateTime = gmtDate.toLocaleString();\n           newMessages.push({\n             uuid:response.messages[i].entry.uuid ,\n             text: response.messages[i].entry.text,\n             date: localeDateTime\n           });\n           console.log(response.messages)\n         }\n         setMessages(messages=>messages.concat(newMessages));\n       }\n     );\n    return function cleanup(){\n      console.log(\"shutting down pubnub\");\n      pubnub.unsubscribeAll();\n      setMessages([]);\n    }\n  },[channel, username]);\n  //Adding back browser button listener\n  useEffect(() => {\n    window.addEventListener(\"popstate\",goBack);\n\n    return function cleanup(){\n      window.removeEventListener(\"popstate\",goBack);\n    }\n  },[]);\n\n  function handleKeyDown(event){\n    if(event.target.id === \"messageInput\"){\n      if (event.key === 'Enter') {\n        publishMessage();\n      }\n    }else if(event.target.id === \"channelInput\"){\n      if (event.key === 'Enter') {\n        //Navigates to new channels\n        const newChannel = tempChannel.value.trim();\n        if(newChannel){\n          if(channel !== newChannel){\n            //If the user isnt trying to navigate to the same channel theyre on\n            setChannel(newChannel);\n            let newURL = window.location.origin + \"?channel=\" + newChannel;\n            window.history.pushState(null, '',newURL);\n            tempChannel.setValue('');\n          }\n        }else{\n          //If the user didnt put anything into the channel Input\n          if(channel !== \"Global\"){\n            //If the user isnt trying to navigate to the same channel theyre on\n            setChannel(\"Global\");\n            let newURL = window.location.origin;\n            window.history.pushState(null, '',newURL);\n            tempChannel.setValue('');\n          }\n        }\n      }\n    }\n\n  }\n\n  //Publishing messages via PubNub\n  function publishMessage(){\n   if (tempMessage.value) {\n     let messageObject = {\n       text: tempMessage.value,\n       uuid: username\n     };\n\n     const pubnub = new PubNub({\n        publishKey: \"pub-c-10978436-24d2-4d1f-aadf-e88df92715b3\",\n        subscribeKey: \"sub-c-1ae870c6-5741-11ea-814d-0ecb550e9de2\",\n        uuid: username\n      });\n     pubnub.publish({\n       message: messageObject,\n       channel: channel\n     });\n     tempMessage.setValue('');\n   }\n }\n  function goBack() {\n    //Access the parameters provided in the URL\n    let query = window.location.search.substring(1);\n    if(!query){\n      setChannel(\"Global\")\n    }else{\n      let params = query.split(\"&\");\n      for(let i = 0; i < params.length;i++){\n        var pair = params[i].split(\"=\");\n        //If the user input a channel then the default channel is now set\n        //If not, we still navigate to the default channel.\n        if(pair[0] === \"channel\" && pair[1] !== \"\"){\n            setChannel(decodeURI(pair[1]))\n        }\n      }\n    }\n  }\n\n \n    return(\n      <Card >\n          <CardContent>\n            <div className=\"top\">\n              <Typography variant=\"h5\" inline >\n                Chat Application\n                </Typography>\n              {/* <Input\n                style={{width:'100px'}}\n                className=\"channel\"\n                id=\"channelInput\"\n                onKeyDown={handleKeyDown}\n                placeholder ={channel}\n                onChange = {tempChannel.onChange}\n                value={tempChannel.value}\n              /> */}\n            </div>\n            <div >\n              \n              <Log messages={messages}/>\n            </div>\n          </CardContent>\n          <CardActions>\n            <Input\n              placeholder=\"Enter a message\"\n              fullWidth={true}\n              id=\"messageInput\"\n              value={tempMessage.value}\n              onChange={tempMessage.onChange}\n              onKeyDown={handleKeyDown}\n              inputProps={{'aria-label': 'Message Field',}}\n              autoFocus={true}\n            />\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={publishMessage}\n              >\n              Submit\n            </Button>\n          </CardActions>\n        </Card>\n      );\n}\n\n//Log functional component that is the list of messages\nfunction Log(props) {\n\n  return(\n    <List style={{maxHeight:'50vh', overflow:'auto'}} component=\"nav\">\n      <ListItem>\n      <Typography component=\"div\">\n        { props.messages.map((item, index)=>(\n          <Message key={index} uuid={item.uuid} text={item.text} date={item.date}/>\n        )) }\n      </Typography>\n      </ListItem>\n    </List>\n  )\n};\n\n//Our message functional component that formats each message.\nfunction Message(props){\n  const classes = useStyles();\n  var messageIndividual = `${props.uuid} - ${props.text}`\n  return (\n    <div>\n      <ListItemText  secondary={props.date}>  \n      <Chip className={classes.chatAvatar} avatar={<Avatar className={classes.purple}>YT</Avatar>} label={messageIndividual} />\n      </ListItemText>\n      <Divider/>\n     \n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\n\n\nexport default function Announcement() {\n\n    const style = {\n        'padding': '30px',\n        'paddingTop': '5px',\n        'border': '1px solid black'\n    };\n\n    return (\n        <div style={style}>\n            Announcement\n        </div>\n    );\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function Sample() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        react-transition-group\n      </button>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={classes.paper}>\n            <h2 id=\"transition-modal-title\">Transition modal</h2>\n            <p id=\"transition-modal-description\">react-transition-group animates me.</p>\n          </div>\n        </Fade>\n      </Modal>\n    </div>\n  );\n}\n","import React from 'react';\nimport './teamList.css';\nimport Avatar from '@material-ui/core/Avatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    avatar: {\n        color: theme.palette.getContrastText(deepOrange[500]),\n        backgroundColor: \"purple\",\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        marginTop: \"20px\",\n    },\n}));\n\nexport default function TeamList() {\n\n    let classes = useStyles();\n\n    return(\n        <div>\n            <Avatar className={classes.avatar}>YT</Avatar>\n            <Avatar className={classes.avatar}>AU</Avatar>\n            <Avatar className={classes.avatar}>AU</Avatar>\n            <Avatar className={classes.avatar}>AU</Avatar>\n            <Avatar className={classes.avatar}>AU</Avatar>\n        </div>\n    );\n}","import React from 'react';\nimport Kanban from './kanban/Kanban';\nimport TeamChat from './TeamChat/Chat';\nimport Announcement from './Announcement';\nimport Sample from './Sample';\nimport TeamList from './TeamList/TeamList';\nimport './dashboard.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n    gridTeam: {\n        boxShadow: \"2px 3px 5px #888888\",\n        width:\"5vw\",\n        height:\"90vh\", \n        display:\"flex\",\n        borderRadius: \"2%\",\n        justifyContent: \"center\",\n        alignItems: \"baseline\",       \n        [theme.breakpoints.down('xs')]: {\n            display:\"none\",\n        }\n    },\n    gridKanban: { \n        width:\"70vw\",\n        height:\"91vh\",\n        overflow: \"auto\",\n        [theme.breakpoints.down('xs')]: {\n            width:\"100vw\",\n        }\n    },\n    gridChat: {\n        backgroundColor:\"yellow\", \n        width:\"25vw\",\n        height:\"91vh\",\n        [theme.breakpoints.down('xs')]: {\n            display:\"none\",\n        }\n    },\n    gridAnnouncement:{\n        height:'50%'\n    }\n\n}));\n\nexport default function Dashboard() {\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={0}>\n                <Grid item className={classes.gridTeam}>\n                    <TeamList/>\n                </Grid>\n                <Grid item className={classes.gridKanban}>\n                <Kanban/>\n                </Grid>\n                <Grid item className={classes.gridChat}>\n                    <Announcement className={classes.gridAnnouncement}/>\n                    <TeamChat/>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const loginPageStyle = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        \n    },\n    formStyle:{\n        display: 'block',\n        textAlign: 'right',\n        color: theme.palette.text.secondary,\n        width: '100%',\n    },\n    signupImage:{\n        width:'70%',\n        margin:'auto',\n        padding:'5vw',\n        paddingTop:'6vh',\n        [theme.breakpoints.between('xs','sm')]: {\n            paddingTop:'15vh',\n            padding:0,\n            width:'100%'\n        },\n        [theme.breakpoints.down('xs')]: {\n            display: 'none',\n            padding:0\n        }\n    },\n    signUpButton:{\n        backgroundColor: '#F76C6C',\n        width:'45%',\n        height: '50px',\n        display: 'inline',\n        marginLeft:'auto',\n        marginRight:'1vw',\n        marginTop:'3vh',\n        '&:hover': {\n            backgroundColor: '#dc5a5a',\n            borderColor: '#dc5a5a',\n            boxShadow: 'none',\n          },\n          '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#F76C6C',\n            borderColor: '#F76C6C',\n          },\n    },\n    loginButton:{\n        backgroundColor: '#A8D0E6',\n        width:'65%',\n        height: '50px',\n        display: 'block',\n        marginLeft:'auto',\n        marginRight:'auto',\n        marginTop:'3vh',\n        '&:hover': {\n            backgroundColor: '#86b8d4',\n            borderColor: '#86b8d4',\n            boxShadow: 'none',\n          },\n          '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#A8D0E6',\n            borderColor: '#A8D0E6',\n          },\n    }\n   \n}));\n","import React, { useState, useEffect } from 'react';\nimport {loginPageStyle} from '../LoginStyle';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = loginPageStyle\n\nexport default function FormItem (props){\n    const classes = useStyles();\n    const formItem = {\n        width: '100%',\n        marginTop:'2.5vh',\n        color:'secondary',\n        marginLeft: 'auto',\n        '&:active': {\n            boxShadow: 'none',\n            backgroundColor: '#F76C6C',\n            borderColor: '#F76C6C',\n          },\n    }\n    return(\n        <Grid item xs={12}>\n                <TextField color=\"secondary\" type={props.type}style={formItem} name={props.name} label={props.label} value={props.value} onChange={props.onChange} variant=\"outlined\" />\n        </Grid>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { loginPageStyle } from './LoginStyle';\nimport { palette } from '@material-ui/system';\nimport Button from '@material-ui/core/Button';\nimport {Redirect} from 'react-router';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport FormItem from './components/formItem'\nimport signupLogo from '../images/signupImage.svg'\n\n\nconst useStyles = loginPageStyle\n\nexport default function Login() {\n\n    const [user, setUser] = useState({\n        mail: \"\",\n        password: \"\"\n\n    });\n\n    const classes = useStyles();\n    const frmStyle = {\n        height: '75vh',\n        paddingLeft: '7vw',\n        paddingRight: '7vw',\n        paddingTop: '5vh',\n        // boxShadow: 'rgb(216, 215, 215) 1px 2px 10px 2px',\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault()\n        var data = {\n            mail: user.mail,\n            password: user.password,\n        }\n        console.log(data);\n        fetch(\"http://localhost:3003/user_create\", {\n            method: 'POST',\n            mode: 'cors',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(data)\n        }).then(function (response) {\n            if (response.status >= 400) {\n                throw new Error(\"Bad response from server\");\n            }\n            return response.json();\n        }).then(function (data) {\n            console.log(data);\n            if (data == \"success\") {\n\n            }\n        }).catch(function (err) {\n            console.log(err)\n        });\n        console.log(data);\n    }\n    function handleChange(event) {\n        const { name, value } = event.target\n        \n        //In progress\n        if(name === 'mail'){\n            const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\n             if(!validEmailRegex.test(value)){\n                // console.log(FormItem().formIte)\n                console.log('This is not email Adress');\n             }\n        }\n        setUser(prevState => {\n            // console.log(prevState)\n            return {\n                ...prevState,\n                [name]: value\n            }    \n        });\n    }\n\n    return (\n        <div className={classes.formStyle}>\n            <Grid container>\n                <Grid item xs={12} sm={6}>\n                    <img className={classes.signupImage} src={signupLogo}></img>\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <form onSubmit={(event) => handleSubmit(event)} style={frmStyle} noValidate autoComplete=\"off\">\n                        <h1 style={{ textAlign: 'center', fontSize: '2.1em', marginTop: '0', color: 'black' }}>Login To System</h1>\n                        <FormItem style={{ marginTop: '1vh' }} label=\"Email\" name='mail' value={user.mail} onChange={(event) => handleChange(event)} />\n                        <FormItem type='password' label=\"Password\" name='password' value={user.password} onChange={(event) => handleChange(event)} />\n                        <Button  className={classes.loginButton} variant=\"contained\" color=\"primary\" on> LOGIN </Button>\n                    </form>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from './landing/components/NavBar';\nimport HamNav from './landing/components/HamNav';\nimport LandingPage from './landing/LandingPage';\nimport Signup from './signup/Signup';\nimport Dashboard from './dashboard/Dashboard';\nimport Login from './login/Login';\n\nconst useStyles = makeStyles(theme => ({\n  nav: {\n    padding: theme.spacing(2),\n    textAlign: 'right',\n    color: theme.palette.text.secondary,\n    height: '4vh',\n    [theme.breakpoints.down('xs')]: {\n      height: '56px',\n    }\n  }\n}));\n\nfunction App() {\n\n  const classes = useStyles();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return (\n    <Router>\n      <Grid container spacing={0}>\n        <Grid item xs={12} >\n          {(windowDimensions.width > 600) ? <Paper className={classes.nav}><NavBar /></Paper> : <Paper className={classes.nav}><HamNav /></Paper>}\n        </Grid>\n      </Grid>\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route exact path=\"/signup\" component={Signup} />\n      <Route exact path=\"/dashboard\" component={Dashboard} />\n      <Route exact path=\"/login\" component={Login} />\n    </Router>\n  );\n}\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/signupImage.29a04443.svg\";","\nmodule.exports = {\n     PUBLISHKEY :'',\n     SUBSCRIBEKEY :''\n}\n"],"sourceRoot":""}